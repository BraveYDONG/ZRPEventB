<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<org.eventb.core.machineFile org.eventb.core.configuration="org.eventb.core.fwd" version="5">
<org.eventb.core.refinesMachine name="'" org.eventb.core.target="m2"/>
<org.eventb.core.seesContext name="&gt;" org.eventb.core.target="c3"/>
<org.eventb.core.variable name="," org.eventb.core.identifier="NeighborLink"/>
<org.eventb.core.variable name="." org.eventb.core.identifier="DNeighborLink"/>
<org.eventb.core.variable name="3" org.eventb.core.identifier="LinkStateTable"/>
<org.eventb.core.variable name="5" org.eventb.core.identifier="RoutingTable"/>
<org.eventb.core.variable name="?" org.eventb.core.identifier="InsertionTime"/>
<org.eventb.core.variable name="A" org.eventb.core.identifier="Time"/>
<org.eventb.core.variable name="C" org.eventb.core.identifier="BroadcastTime"/>
<org.eventb.core.event name="D" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.label="INITIALISATION">
<org.eventb.core.action name="'" org.eventb.core.assignment="TTL ≔ Nodes×{Nodes×{1}}" org.eventb.core.label="act8"/>
<org.eventb.core.action name="(" org.eventb.core.assignment="SeqNum ≔ Nodes×{Nodes×{1}}" org.eventb.core.label="act9"/>
</org.eventb.core.event>
<org.eventb.core.event name="E" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.label="Add_NewLink">
<org.eventb.core.refinesEvent name="'" org.eventb.core.target="Add_NewLink"/>
</org.eventb.core.event>
<org.eventb.core.event name="F" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.label="Add_BrokenLink">
<org.eventb.core.refinesEvent name="'" org.eventb.core.target="Add_BrokenLink"/>
</org.eventb.core.event>
<org.eventb.core.event name="G" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.label="Remove_Link">
<org.eventb.core.refinesEvent name="'" org.eventb.core.target="Remove_Link"/>
</org.eventb.core.event>
<org.eventb.core.event name="H" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.label="updateRoutingTable">
<org.eventb.core.refinesEvent name="'" org.eventb.core.target="updateRoutingTable"/>
</org.eventb.core.event>
<org.eventb.core.event name="I" org.eventb.core.convergence="0" org.eventb.core.extended="false" org.eventb.core.label="stabilize">
<org.eventb.core.refinesEvent name="'" org.eventb.core.target="stabilize"/>
<org.eventb.core.parameter name="'" org.eventb.core.identifier="nodes"/>
<org.eventb.core.guard name="(" org.eventb.core.label="grd1" org.eventb.core.predicate="nodes ∈ Nodes → ℙ(Nodes)"/>
<org.eventb.core.guard name=")" org.eventb.core.label="grd2" org.eventb.core.predicate="∀m, n · m ↦ n ∈ NeighborLink ⇔ m ↦ n ∈ LinkStateTable(m)"/>
<org.eventb.core.guard name="*" org.eventb.core.label="grd3" org.eventb.core.predicate="∀m, n · m ↦ n ∈ closure(NeighborLink) ∧ n ∈ nodes(m) ⇒ ( ∀ x · m ↦ x ∈ LinkStateTable(m) ⇔ m ↦ x ∈ LinkStateTable(n))"/>
<org.eventb.core.guard name="+" org.eventb.core.label="grd4" org.eventb.core.predicate="nodes = (λx·x∈Nodes∣dom(LinkStateTable(x)))"/>
<org.eventb.core.guard name="," org.eventb.core.label="grd5" org.eventb.core.predicate="∀x,y·x∈Nodes ∧ y∈nodes(x) ⇒ x↦y ∈ closure(LinkStateTable(x))"/>
</org.eventb.core.event>
<org.eventb.core.event name="J" org.eventb.core.convergence="0" org.eventb.core.extended="false" org.eventb.core.label="obtainLinks">
<org.eventb.core.refinesEvent name="'" org.eventb.core.target="obtainLinks"/>
<org.eventb.core.parameter name="'" org.eventb.core.identifier="node"/>
<org.eventb.core.parameter name="(" org.eventb.core.identifier="addlinks"/>
<org.eventb.core.parameter name=")" org.eventb.core.identifier="removelinks"/>
<org.eventb.core.guard name="*" org.eventb.core.label="grd1" org.eventb.core.predicate="addlinks = {p↦m∣ p = node ∧ p↦m ∈ NeighborLink ∧ p↦m ∉ LinkStateTable(p)}"/>
<org.eventb.core.guard name="+" org.eventb.core.label="grd2" org.eventb.core.predicate="removelinks = {p↦m∣ p = node ∧ p↦m ∉ NeighborLink ∧ p↦m ∈ LinkStateTable(p)}"/>
<org.eventb.core.guard name="," org.eventb.core.label="grd3" org.eventb.core.predicate="Time − BroadcastTime(node) ≥ period"/>
<org.eventb.core.guard name="-" org.eventb.core.label="grd4" org.eventb.core.predicate="rest = removelinks ⩤ InsertionTime(node)"/>
<org.eventb.core.action name="." org.eventb.core.assignment="InsertionTime(node) ≔ rest  ((({node} ◁ dom(rest)) ∪ addlinks) × {Time})" org.eventb.core.label="act1"/>
<org.eventb.core.action name="/" org.eventb.core.assignment="BroadcastTime(node) ≔ Time" org.eventb.core.label="act2"/>
<org.eventb.core.parameter name="0" org.eventb.core.identifier="rest"/>
<org.eventb.core.action name="1" org.eventb.core.assignment="TTL(node)≔TTL(node){node2↦(zoneRadius−1)}" org.eventb.core.label="act3"/>
<org.eventb.core.action name="2" org.eventb.core.assignment="SeqNum(node)≔SeqNum(node) {node2↦(SeqNum(node)(node2)+1)}" org.eventb.core.label="act4"/>
<org.eventb.core.parameter name="3" org.eventb.core.identifier="node2"/>
<org.eventb.core.guard name="4" org.eventb.core.label="grd5" org.eventb.core.predicate="node2∈Nodes ∧ node2≠node ∧ node↦node2 ∈ NeighborLink"/>
</org.eventb.core.event>
<org.eventb.core.event name="K" org.eventb.core.convergence="0" org.eventb.core.extended="false" org.eventb.core.label="transferLinks">
<org.eventb.core.refinesEvent name="'" org.eventb.core.target="transferLinks"/>
<org.eventb.core.parameter name="'" org.eventb.core.identifier="sender"/>
<org.eventb.core.parameter name="(" org.eventb.core.identifier="receiver"/>
<org.eventb.core.parameter name=")" org.eventb.core.identifier="transferNode"/>
<org.eventb.core.guard name="4" org.eventb.core.label="grd1" org.eventb.core.predicate="sender ∈ Nodes ∧ receiver ∈ Nodes ∧ transferNode ∈ Nodes"/>
<org.eventb.core.guard name="=" org.eventb.core.label="grd2" org.eventb.core.predicate="sender ≠ receiver ∧ receiver ≠ transferNode"/>
<org.eventb.core.guard name="," org.eventb.core.label="grd3" org.eventb.core.predicate="sender ↦ receiver ∈ LinkStateTable(sender)"/>
<org.eventb.core.guard name="-" org.eventb.core.label="grd4" org.eventb.core.predicate="receivedlinks ∈ Nodes ↔ Nodes ∧ dom(receivedlinks) = {transferNode}"/>
<org.eventb.core.guard name="." org.eventb.core.label="grd5" org.eventb.core.predicate="addlinks = receivedlinks"/>
<org.eventb.core.guard name="/" org.eventb.core.label="grd6" org.eventb.core.predicate="removelinks = {transferNode} ◁ LinkStateTable(receiver)"/>
<org.eventb.core.action name="0" org.eventb.core.assignment="LinkStateTable(receiver) ≔ (LinkStateTable(receiver)∖removelinks) ∪ addlinks" org.eventb.core.label="act1"/>
<org.eventb.core.parameter name="1" org.eventb.core.identifier="receivedlinks"/>
<org.eventb.core.action name="5" org.eventb.core.assignment="InsertionTime(receiver) ≔ (removelinks ⩤ InsertionTime(receiver)) ∪ (addlinks × {Time})" org.eventb.core.label="act2"/>
<org.eventb.core.parameter name="&gt;" org.eventb.core.identifier="addlinks"/>
<org.eventb.core.parameter name="?" org.eventb.core.identifier="removelinks"/>
<org.eventb.core.parameter name="6" org.eventb.core.identifier="receivedTTL"/>
<org.eventb.core.parameter name="7" org.eventb.core.identifier="receivedSeqNum"/>
<org.eventb.core.guard name="8" org.eventb.core.label="grd7" org.eventb.core.predicate="receivedTTL &gt; 0 ∧ receivedSeqNum &gt;0"/>
<org.eventb.core.guard name="9" org.eventb.core.label="grd8" org.eventb.core.predicate="SeqNum(receiver)(transferNode) ≤ receivedSeqNum"/>
<org.eventb.core.action name=":" org.eventb.core.assignment="TTL(receiver) ≔ TTL(receiver)  {transferNode ↦ receivedTTL −1}" org.eventb.core.label="act3"/>
<org.eventb.core.action name=";" org.eventb.core.assignment="SeqNum(receiver) ≔ SeqNum(receiver)  {transferNode ↦ receivedSeqNum}" org.eventb.core.label="act4"/>
</org.eventb.core.event>
<org.eventb.core.event name="L" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.label="refreshLinks">
<org.eventb.core.refinesEvent name="'" org.eventb.core.target="refreshLinks"/>
</org.eventb.core.event>
<org.eventb.core.event name="M" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.label="timeClock">
<org.eventb.core.refinesEvent name="'" org.eventb.core.target="timeClock"/>
</org.eventb.core.event>
<org.eventb.core.variable name="N" org.eventb.core.identifier="TTL"/>
<org.eventb.core.invariant name="O" org.eventb.core.label="inv1" org.eventb.core.predicate="TTL ∈ Nodes → (Nodes → ℕ) "/>
<org.eventb.core.variable name="P" org.eventb.core.identifier="SeqNum"/>
<org.eventb.core.invariant name="Q" org.eventb.core.label="inv2" org.eventb.core.predicate="SeqNum ∈ Nodes → (Nodes → ℕ)"/>
<org.eventb.core.invariant name="R" org.eventb.core.label="inv3" org.eventb.core.predicate="∀m,p· p ∈ dom(LinkStateTable(m)) ⇒ SeqNum(m)(p)&gt;0"/>
<org.eventb.core.invariant name="S" org.eventb.core.label="inv4" org.eventb.core.predicate="∀m,n· n ∈ dom(LinkStateTable(m)) ∧ m↦n ∈ closure(LinkStateTable(m)) ∧ (∃x·m↦x ∈ LinkStateTable(m) ∧ ¬ m↦x ∈ LinkStateTable(n)) ⇒ ¬(∀x·m↦x ∈ LinkStateTable(m) ⇔ m↦x ∈ LinkStateTable(n))"/>
<org.eventb.core.event name="T" org.eventb.core.convergence="0" org.eventb.core.extended="false" org.eventb.core.label="discardLinks">
<org.eventb.core.parameter name="'" org.eventb.core.identifier="sender"/>
<org.eventb.core.parameter name="(" org.eventb.core.identifier="receiver"/>
<org.eventb.core.parameter name=")" org.eventb.core.identifier="transferNode"/>
<org.eventb.core.guard name="*" org.eventb.core.label="grd1" org.eventb.core.predicate="sender ∈ Nodes ∧ receiver ∈ Nodes ∧ transferNode ∈ Nodes"/>
<org.eventb.core.guard name="+" org.eventb.core.label="grd2" org.eventb.core.predicate="sender ≠ receiver ∧ receiver ≠ transferNode"/>
<org.eventb.core.parameter name="," org.eventb.core.identifier="receivedSeqNum"/>
<org.eventb.core.guard name="-" org.eventb.core.label="grd3" org.eventb.core.predicate="sender ↦ receiver ∈ LinkStateTable(sender)"/>
<org.eventb.core.guard name="." org.eventb.core.label="grd4" org.eventb.core.predicate="SeqNum(receiver)(transferNode) &gt; receivedSeqNum"/>
</org.eventb.core.event>
</org.eventb.core.machineFile>
