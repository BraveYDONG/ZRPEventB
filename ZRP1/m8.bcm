<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<org.eventb.core.scMachineFile org.eventb.core.accurate="true" org.eventb.core.configuration="org.eventb.core.fwd">
<org.eventb.core.scRefinesMachine name="'" org.eventb.core.scTarget="/ZRP1/m7.bcm" org.eventb.core.source="/ZRP1/m8.bum|org.eventb.core.machineFile#m8|org.eventb.core.refinesMachine#'"/>
<org.eventb.core.scSeesContext name="(" org.eventb.core.scTarget="/ZRP1/c3.bcc" org.eventb.core.source="/ZRP1/m8.bum|org.eventb.core.machineFile#m8|org.eventb.core.seesContext#&gt;"/>
<org.eventb.core.scInternalContext name="c0">
<org.eventb.core.scAxiom name="'" org.eventb.core.label="axm1" org.eventb.core.predicate="finite(Nodes)" org.eventb.core.source="/ZRP1/c0.buc|org.eventb.core.contextFile#c0|org.eventb.core.axiom#'" org.eventb.core.theorem="false"/>
<org.eventb.core.scAxiom name="(" org.eventb.core.label="axm2" org.eventb.core.predicate="∀a⦂ℙ(Nodes),b⦂ℙ(Nodes),f⦂ℙ(Nodes×Nodes)·a∈ℙ(Nodes)∧b∈ℙ(Nodes)∧f∈a ↔ b⇒(finite(a)∧finite(b)⇒finite(f))" org.eventb.core.source="/ZRP1/c0.buc|org.eventb.core.contextFile#c0|org.eventb.core.axiom#)" org.eventb.core.theorem="true"/>
<org.eventb.core.scCarrierSet name="Nodes" org.eventb.core.source="/ZRP1/c0.buc|org.eventb.core.contextFile#c0|org.eventb.core.carrierSet#(" org.eventb.core.type="ℙ(Nodes)"/>
</org.eventb.core.scInternalContext>
<org.eventb.core.scInternalContext name="c1">
<org.eventb.core.scExtendsContext name="'" org.eventb.core.scTarget="/ZRP1/c0.bcc|org.eventb.core.scContextFile#c0" org.eventb.core.source="/ZRP1/c1.buc|org.eventb.core.contextFile#c1|org.eventb.core.extendsContext#'"/>
<org.eventb.core.scAxiom name="c1" org.eventb.core.label="axm1" org.eventb.core.predicate="closure∈(Nodes ↔ Nodes) → (Nodes ↔ Nodes)" org.eventb.core.source="/ZRP1/c1.buc|org.eventb.core.contextFile#c1|org.eventb.core.axiom#(" org.eventb.core.theorem="false"/>
<org.eventb.core.scAxiom name="c2" org.eventb.core.label="axm2" org.eventb.core.predicate="∀r⦂ℙ(Nodes×Nodes)·r⊆closure(r)" org.eventb.core.source="/ZRP1/c1.buc|org.eventb.core.contextFile#c1|org.eventb.core.axiom#)" org.eventb.core.theorem="false"/>
<org.eventb.core.scAxiom name="c3" org.eventb.core.label="axm3" org.eventb.core.predicate="∀r⦂ℙ(Nodes×Nodes)·closure(r);r⊆closure(r)" org.eventb.core.source="/ZRP1/c1.buc|org.eventb.core.contextFile#c1|org.eventb.core.axiom#*" org.eventb.core.theorem="false"/>
<org.eventb.core.scAxiom name="c4" org.eventb.core.label="axm4" org.eventb.core.predicate="∀r⦂ℙ(Nodes×Nodes),s⦂ℙ(Nodes×Nodes)·r⊆s∧s;r⊆s⇒closure(r)⊆s" org.eventb.core.source="/ZRP1/c1.buc|org.eventb.core.contextFile#c1|org.eventb.core.axiom#+" org.eventb.core.theorem="false"/>
<org.eventb.core.scAxiom name="c5" org.eventb.core.label="axm5" org.eventb.core.predicate="∀r⦂ℙ(Nodes×Nodes)·closure(r);closure(r)⊆closure(r)" org.eventb.core.source="/ZRP1/c1.buc|org.eventb.core.contextFile#c1|org.eventb.core.axiom#," org.eventb.core.theorem="false"/>
<org.eventb.core.scConstant name="closure" org.eventb.core.source="/ZRP1/c1.buc|org.eventb.core.contextFile#c1|org.eventb.core.constant#-" org.eventb.core.type="ℙ(ℙ(Nodes×Nodes)×ℙ(Nodes×Nodes))"/>
</org.eventb.core.scInternalContext>
<org.eventb.core.scInternalContext name="c2">
<org.eventb.core.scExtendsContext name="'" org.eventb.core.scTarget="/ZRP1/c1.bcc|org.eventb.core.scContextFile#c1" org.eventb.core.source="/ZRP1/c2.buc|org.eventb.core.contextFile#c2|org.eventb.core.extendsContext#'"/>
<org.eventb.core.scAxiom name="c2" org.eventb.core.label="axm1" org.eventb.core.predicate="lifetime∈ℕ1" org.eventb.core.source="/ZRP1/c2.buc|org.eventb.core.contextFile#c2|org.eventb.core.axiom#)" org.eventb.core.theorem="false"/>
<org.eventb.core.scAxiom name="c3" org.eventb.core.label="axm2" org.eventb.core.predicate="period∈ℕ1" org.eventb.core.source="/ZRP1/c2.buc|org.eventb.core.contextFile#c2|org.eventb.core.axiom#+" org.eventb.core.theorem="false"/>
<org.eventb.core.scAxiom name="c4" org.eventb.core.label="axm3" org.eventb.core.predicate="lifetime&gt;period" org.eventb.core.source="/ZRP1/c2.buc|org.eventb.core.contextFile#c2|org.eventb.core.axiom#," org.eventb.core.theorem="false"/>
<org.eventb.core.scConstant name="lifetime" org.eventb.core.source="/ZRP1/c2.buc|org.eventb.core.contextFile#c2|org.eventb.core.constant#(" org.eventb.core.type="ℤ"/>
<org.eventb.core.scConstant name="period" org.eventb.core.source="/ZRP1/c2.buc|org.eventb.core.contextFile#c2|org.eventb.core.constant#*" org.eventb.core.type="ℤ"/>
</org.eventb.core.scInternalContext>
<org.eventb.core.scInternalContext name="c3">
<org.eventb.core.scExtendsContext name="'" org.eventb.core.scTarget="/ZRP1/c2.bcc|org.eventb.core.scContextFile#c2" org.eventb.core.source="/ZRP1/c3.buc|org.eventb.core.contextFile#c3|org.eventb.core.extendsContext#'"/>
<org.eventb.core.scAxiom name="c3" org.eventb.core.label="axm1" org.eventb.core.predicate="zoneRadius∈ℕ1" org.eventb.core.source="/ZRP1/c3.buc|org.eventb.core.contextFile#c3|org.eventb.core.axiom#)" org.eventb.core.theorem="false"/>
<org.eventb.core.scConstant name="zoneRadius" org.eventb.core.source="/ZRP1/c3.buc|org.eventb.core.contextFile#c3|org.eventb.core.constant#(" org.eventb.core.type="ℤ"/>
</org.eventb.core.scInternalContext>
<org.eventb.core.scInvariant name="c1" org.eventb.core.label="inv1" org.eventb.core.predicate="NeighborLink∈Nodes ↔ Nodes" org.eventb.core.source="/ZRP1/m0.bum|org.eventb.core.machineFile#m0|org.eventb.core.invariant#-" org.eventb.core.theorem="false"/>
<org.eventb.core.scInvariant name="c2" org.eventb.core.label="inv2" org.eventb.core.predicate="DNeighborLink∈Nodes ↔ Nodes" org.eventb.core.source="/ZRP1/m0.bum|org.eventb.core.machineFile#m0|org.eventb.core.invariant#\/" org.eventb.core.theorem="false"/>
<org.eventb.core.scInvariant name="c3" org.eventb.core.label="inv3" org.eventb.core.predicate="∀node1⦂Nodes,node2⦂Nodes·node1∈Nodes∧node2∈Nodes∧node1 ↦ node2∈NeighborLink⇒node1≠node2" org.eventb.core.source="/ZRP1/m0.bum|org.eventb.core.machineFile#m0|org.eventb.core.invariant#0" org.eventb.core.theorem="false"/>
<org.eventb.core.scInvariant name="c4" org.eventb.core.label="inv4" org.eventb.core.predicate="∀node1⦂Nodes,node2⦂Nodes·node1∈Nodes∧node2∈Nodes∧node1 ↦ node2∈NeighborLink⇒node2 ↦ node1∈NeighborLink" org.eventb.core.source="/ZRP1/m0.bum|org.eventb.core.machineFile#m0|org.eventb.core.invariant#1" org.eventb.core.theorem="false"/>
<org.eventb.core.scInvariant name="c5" org.eventb.core.label="inv5" org.eventb.core.predicate="NeighborLink∩DNeighborLink=(∅ ⦂ ℙ(Nodes×Nodes))" org.eventb.core.source="/ZRP1/m0.bum|org.eventb.core.machineFile#m0|org.eventb.core.invariant#2" org.eventb.core.theorem="false"/>
<org.eventb.core.scInvariant name="c6" org.eventb.core.label="inv1" org.eventb.core.predicate="LinkStateTable∈Nodes → (Nodes ↔ Nodes)" org.eventb.core.source="/ZRP1/m1.bum|org.eventb.core.machineFile#m1|org.eventb.core.invariant#4" org.eventb.core.theorem="false"/>
<org.eventb.core.scInvariant name="c7" org.eventb.core.label="inv2" org.eventb.core.predicate="RoutingTable∈Nodes → (Nodes ↔ Nodes)" org.eventb.core.source="/ZRP1/m1.bum|org.eventb.core.machineFile#m1|org.eventb.core.invariant#6" org.eventb.core.theorem="false"/>
<org.eventb.core.scInvariant name="c8" org.eventb.core.label="inv3" org.eventb.core.predicate="∀n⦂Nodes·n∈Nodes⇒RoutingTable(n)⊆Nodes × Nodes" org.eventb.core.source="/ZRP1/m1.bum|org.eventb.core.machineFile#m1|org.eventb.core.invariant#7" org.eventb.core.theorem="false"/>
<org.eventb.core.scInvariant name="c9" org.eventb.core.label="inv1" org.eventb.core.predicate="InsertionTime∈Nodes → (Nodes × Nodes ⇸ ℕ)" org.eventb.core.source="/ZRP1/m2.bum|org.eventb.core.machineFile#m2|org.eventb.core.invariant#@" org.eventb.core.theorem="false"/>
<org.eventb.core.scInvariant name="c:" org.eventb.core.label="inv2" org.eventb.core.predicate="Time∈ℕ1" org.eventb.core.source="/ZRP1/m2.bum|org.eventb.core.machineFile#m2|org.eventb.core.invariant#B" org.eventb.core.theorem="false"/>
<org.eventb.core.scInvariant name="c;" org.eventb.core.label="inv3" org.eventb.core.predicate="BroadcastTime∈Nodes → ℕ1" org.eventb.core.source="/ZRP1/m2.bum|org.eventb.core.machineFile#m2|org.eventb.core.invariant#D" org.eventb.core.theorem="false"/>
<org.eventb.core.scInvariant name="c=" org.eventb.core.label="inv4" org.eventb.core.predicate="∀n⦂Nodes·n∈Nodes⇒(∀l⦂Nodes×Nodes·l∈LinkStateTable(n)⇔l∈dom(InsertionTime(n)))" org.eventb.core.source="/ZRP1/m2.bum|org.eventb.core.machineFile#m2|org.eventb.core.invariant#E" org.eventb.core.theorem="false"/>
<org.eventb.core.scInvariant name="c&gt;" org.eventb.core.label="inv5" org.eventb.core.predicate="∀n⦂Nodes·n∈Nodes⇒BroadcastTime(n)≤Time" org.eventb.core.source="/ZRP1/m2.bum|org.eventb.core.machineFile#m2|org.eventb.core.invariant#F" org.eventb.core.theorem="false"/>
<org.eventb.core.scInvariant name="c?" org.eventb.core.label="inv6" org.eventb.core.predicate="∀m⦂Nodes,n⦂Nodes·m ↦ n∈LinkStateTable(m)⇒m ↦ n∈NeighborLink∨m ↦ n∈DNeighborLink" org.eventb.core.source="/ZRP1/m2.bum|org.eventb.core.machineFile#m2|org.eventb.core.invariant#G" org.eventb.core.theorem="false"/>
<org.eventb.core.scInvariant name="c@" org.eventb.core.label="inv7" org.eventb.core.predicate="∃m⦂Nodes,n⦂Nodes·m ↦ n∈LinkStateTable(m)∧m ↦ n∉NeighborLink∧m ↦ n∈DNeighborLink⇒¬(∀q⦂Nodes,p⦂Nodes·q ↦ p∈NeighborLink⇔q ↦ p∈LinkStateTable(q))" org.eventb.core.source="/ZRP1/m2.bum|org.eventb.core.machineFile#m2|org.eventb.core.invariant#H" org.eventb.core.theorem="false"/>
<org.eventb.core.scInvariant name="cA" org.eventb.core.label="inv8" org.eventb.core.predicate="∃m⦂Nodes,n⦂Nodes·m ↦ n∉LinkStateTable(m)∧m ↦ n∈NeighborLink⇒¬(∀q⦂Nodes,p⦂Nodes·q ↦ p∈NeighborLink⇔q ↦ p∈LinkStateTable(q))" org.eventb.core.source="/ZRP1/m2.bum|org.eventb.core.machineFile#m2|org.eventb.core.invariant#I" org.eventb.core.theorem="false"/>
<org.eventb.core.scInvariant name="cB" org.eventb.core.label="inv1" org.eventb.core.predicate="TTL∈Nodes → (Nodes → ℕ)" org.eventb.core.source="/ZRP1/m3.bum|org.eventb.core.machineFile#m3|org.eventb.core.invariant#O" org.eventb.core.theorem="false"/>
<org.eventb.core.scInvariant name="cC" org.eventb.core.label="inv2" org.eventb.core.predicate="SeqNum∈Nodes → (Nodes → ℕ)" org.eventb.core.source="/ZRP1/m3.bum|org.eventb.core.machineFile#m3|org.eventb.core.invariant#Q" org.eventb.core.theorem="false"/>
<org.eventb.core.scInvariant name="cD" org.eventb.core.label="inv3" org.eventb.core.predicate="∀m⦂Nodes,p⦂Nodes·p∈dom(LinkStateTable(m))⇒SeqNum(m)(p)&gt;0" org.eventb.core.source="/ZRP1/m3.bum|org.eventb.core.machineFile#m3|org.eventb.core.invariant#R" org.eventb.core.theorem="false"/>
<org.eventb.core.scInvariant name="cE" org.eventb.core.label="inv4" org.eventb.core.predicate="∀m⦂Nodes,n⦂Nodes·n∈dom(LinkStateTable(m))∧m ↦ n∈closure(LinkStateTable(m))∧(∃x⦂Nodes·m ↦ x∈LinkStateTable(m)∧¬m ↦ x∈LinkStateTable(n))⇒¬(∀x⦂Nodes·m ↦ x∈LinkStateTable(m)⇔m ↦ x∈LinkStateTable(n))" org.eventb.core.source="/ZRP1/m3.bum|org.eventb.core.machineFile#m3|org.eventb.core.invariant#S" org.eventb.core.theorem="false"/>
<org.eventb.core.scInvariant name="cF" org.eventb.core.label="inv1" org.eventb.core.predicate="TransmittedLink∈Nodes × Nodes → (Nodes → (Nodes ↔ Nodes))" org.eventb.core.source="/ZRP1/m4.bum|org.eventb.core.machineFile#m4|org.eventb.core.invariant#\\" org.eventb.core.theorem="false"/>
<org.eventb.core.scInvariant name="cG" org.eventb.core.label="inv2" org.eventb.core.predicate="TransmittedSeqNum∈Nodes × Nodes → (Nodes → ℕ)" org.eventb.core.source="/ZRP1/m4.bum|org.eventb.core.machineFile#m4|org.eventb.core.invariant#^" org.eventb.core.theorem="false"/>
<org.eventb.core.scInvariant name="cH" org.eventb.core.label="inv3" org.eventb.core.predicate="TransmittedTTL∈Nodes × Nodes → (Nodes → ℕ)" org.eventb.core.source="/ZRP1/m4.bum|org.eventb.core.machineFile#m4|org.eventb.core.invariant#`" org.eventb.core.theorem="false"/>
<org.eventb.core.scInvariant name="cI" org.eventb.core.label="inv4" org.eventb.core.predicate="Flag∈Nodes → (Nodes → BOOL)" org.eventb.core.source="/ZRP1/m4.bum|org.eventb.core.machineFile#m4|org.eventb.core.invariant#b" org.eventb.core.theorem="false"/>
<org.eventb.core.scInvariant name="cJ" org.eventb.core.label="inv5" org.eventb.core.predicate="∀m⦂Nodes,n⦂Nodes,p⦂Nodes·TransmittedLink(m ↦ n)(p)≠(∅ ⦂ ℙ(Nodes×Nodes))∧n≠p⇒m ↦ n∈LinkStateTable(m)" org.eventb.core.source="/ZRP1/m4.bum|org.eventb.core.machineFile#m4|org.eventb.core.invariant#c" org.eventb.core.theorem="false"/>
<org.eventb.core.scInvariant name="cK" org.eventb.core.label="inv6" org.eventb.core.predicate="∀m⦂Nodes,n⦂Nodes,p⦂Nodes·TransmittedLink(m ↦ n)(p)≠(∅ ⦂ ℙ(Nodes×Nodes))∧n≠p⇒dom(TransmittedLink(m ↦ n)(p))={p}" org.eventb.core.source="/ZRP1/m4.bum|org.eventb.core.machineFile#m4|org.eventb.core.invariant#d" org.eventb.core.theorem="false"/>
<org.eventb.core.scInvariant name="cL" org.eventb.core.label="inv7" org.eventb.core.predicate="∀m⦂Nodes,n⦂Nodes,p⦂Nodes·TransmittedLink(m ↦ n)(p)≠(∅ ⦂ ℙ(Nodes×Nodes))∧n≠p⇒TransmittedTTL(m ↦ n)(p)&gt;0" org.eventb.core.source="/ZRP1/m4.bum|org.eventb.core.machineFile#m4|org.eventb.core.invariant#i" org.eventb.core.theorem="false"/>
<org.eventb.core.scInvariant name="cM" org.eventb.core.label="inv8" org.eventb.core.predicate="∀l⦂Nodes×Nodes,p⦂Nodes·l∈Nodes × Nodes∧TransmittedLink(l)(p)=(∅ ⦂ ℙ(Nodes×Nodes))⇒TransmittedTTL(l)(p)=0" org.eventb.core.source="/ZRP1/m4.bum|org.eventb.core.machineFile#m4|org.eventb.core.invariant#j" org.eventb.core.theorem="false"/>
<org.eventb.core.scInvariant name="cN" org.eventb.core.label="inv9" org.eventb.core.predicate="∀m⦂Nodes,n⦂Nodes,p⦂Nodes·TransmittedLink(m ↦ n)(p)≠(∅ ⦂ ℙ(Nodes×Nodes))∧n≠p⇒TransmittedSeqNum(m ↦ n)(p)&gt;0" org.eventb.core.source="/ZRP1/m4.bum|org.eventb.core.machineFile#m4|org.eventb.core.invariant#k" org.eventb.core.theorem="false"/>
<org.eventb.core.scInvariant name="cO" org.eventb.core.label="inv10" org.eventb.core.predicate="∀l⦂Nodes×Nodes,p⦂Nodes·l∈Nodes × Nodes∧TransmittedLink(l)(p)=(∅ ⦂ ℙ(Nodes×Nodes))⇒TransmittedSeqNum(l)(p)=0" org.eventb.core.source="/ZRP1/m4.bum|org.eventb.core.machineFile#m4|org.eventb.core.invariant#l" org.eventb.core.theorem="false"/>
<org.eventb.core.scInvariant name="cP" org.eventb.core.label="inv1" org.eventb.core.predicate="RouteRequest∈Nodes ↔ Nodes" org.eventb.core.source="/ZRP1/m5.bum|org.eventb.core.machineFile#m5|org.eventb.core.invariant#q" org.eventb.core.theorem="false"/>
<org.eventb.core.scInvariant name="cQ" org.eventb.core.label="inv2" org.eventb.core.predicate="IntendedNeighbor∈Nodes × (Nodes × Nodes) → ℙ(Nodes)" org.eventb.core.source="/ZRP1/m5.bum|org.eventb.core.machineFile#m5|org.eventb.core.invariant#s" org.eventb.core.theorem="false"/>
<org.eventb.core.scInvariant name="cR" org.eventb.core.label="inv3" org.eventb.core.predicate="AccumulatedPath∈Nodes → (Nodes × Nodes ⇸ (Nodes ↔ Nodes))" org.eventb.core.source="/ZRP1/m5.bum|org.eventb.core.machineFile#m5|org.eventb.core.invariant#u" org.eventb.core.theorem="false"/>
<org.eventb.core.scInvariant name="cS" org.eventb.core.label="inv4" org.eventb.core.predicate="TransmittedTag∈Nodes × Nodes → (Nodes × Nodes → ℕ)" org.eventb.core.source="/ZRP1/m5.bum|org.eventb.core.machineFile#m5|org.eventb.core.invariant#w" org.eventb.core.theorem="false"/>
<org.eventb.core.scInvariant name="cT" org.eventb.core.label="inv5" org.eventb.core.predicate="TransmittedPath∈Nodes × Nodes → (Nodes × Nodes → (Nodes ↔ Nodes))" org.eventb.core.source="/ZRP1/m5.bum|org.eventb.core.machineFile#m5|org.eventb.core.invariant#y" org.eventb.core.theorem="false"/>
<org.eventb.core.scInvariant name="cU" org.eventb.core.label="inv6" org.eventb.core.predicate="∀s⦂Nodes,d⦂Nodes·s∈Nodes∧d∈Nodes∧s ↦ d∈RouteRequest⇒s≠d" org.eventb.core.source="/ZRP1/m5.bum|org.eventb.core.machineFile#m5|org.eventb.core.invariant#z" org.eventb.core.theorem="false"/>
<org.eventb.core.scInvariant name="cV" org.eventb.core.label="inv7" org.eventb.core.predicate="∀s⦂Nodes,n⦂Nodes·s∈Nodes∧n∈Nodes∧s≠n⇒(∀r⦂Nodes×Nodes·s=(prj1 ⦂ ℙ(Nodes×Nodes×Nodes))(r)∧r∈dom(AccumulatedPath(n))⇒r∈dom(AccumulatedPath(s)))" org.eventb.core.source="/ZRP1/m5.bum|org.eventb.core.machineFile#m5|org.eventb.core.invariant#{" org.eventb.core.theorem="false"/>
<org.eventb.core.scInvariant name="cW" org.eventb.core.label="inv8" org.eventb.core.predicate="∀n⦂Nodes,m⦂Nodes,r⦂Nodes×Nodes·n≠m∧TransmittedPath(n ↦ m)(r)≠(∅ ⦂ ℙ(Nodes×Nodes))⇒r∈dom(AccumulatedPath(n))" org.eventb.core.source="/ZRP1/m5.bum|org.eventb.core.machineFile#m5|org.eventb.core.invariant#~" org.eventb.core.theorem="false"/>
<org.eventb.core.scInvariant name="cX" org.eventb.core.label="inv9" org.eventb.core.predicate="∀n⦂Nodes,m⦂Nodes,r⦂Nodes×Nodes,path⦂ℙ(Nodes×Nodes)·n≠m∧m∈IntendedNeighbor(n ↦ r)⇒(r ↦ path∈AccumulatedPath(n)∧TransmittedTag(n ↦ m)(r)≠0⇒TransmittedPath(n ↦ m)(r)=path)" org.eventb.core.source="/ZRP1/m5.bum|org.eventb.core.machineFile#m5|org.eventb.core.invariant#''" org.eventb.core.theorem="false"/>
<org.eventb.core.scInvariant name="cY" org.eventb.core.label="inv10" org.eventb.core.predicate="∀n⦂Nodes,m⦂Nodes,r⦂Nodes×Nodes·n≠m∧TransmittedTag(n ↦ m)(r)≠0⇒m∈IntendedNeighbor(n ↦ r)" org.eventb.core.source="/ZRP1/m5.bum|org.eventb.core.machineFile#m5|org.eventb.core.invariant#'(" org.eventb.core.theorem="false"/>
<org.eventb.core.scInvariant name="cZ" org.eventb.core.label="inv11" org.eventb.core.predicate="∀l⦂Nodes×Nodes,r⦂Nodes×Nodes·l∈Nodes × Nodes∧TransmittedTag(l)(r)=0⇒TransmittedPath(l)(r)=(∅ ⦂ ℙ(Nodes×Nodes))" org.eventb.core.source="/ZRP1/m5.bum|org.eventb.core.machineFile#m5|org.eventb.core.invariant#')" org.eventb.core.theorem="false"/>
<org.eventb.core.scInvariant name="c[" org.eventb.core.label="inv12" org.eventb.core.predicate="∀n⦂Nodes,r⦂Nodes×Nodes·n∈Nodes∧r∈RouteRequest∧r∈dom(AccumulatedPath(n))⇒AccumulatedPath(n)(r)∈Nodes ↔ Nodes" org.eventb.core.source="/ZRP1/m5.bum|org.eventb.core.machineFile#m5|org.eventb.core.invariant#'*" org.eventb.core.theorem="false"/>
<org.eventb.core.scInvariant name="c\" org.eventb.core.label="inv13" org.eventb.core.predicate="∀n⦂Nodes,s⦂Nodes,t⦂Nodes·n∈Nodes∧s ↦ t∈Nodes × Nodes∧s ↦ t∈dom(AccumulatedPath(n))⇒(∀m⦂Nodes,path⦂ℙ(Nodes×Nodes)·path=AccumulatedPath(n)(s ↦ t)∧m∈dom(path)⇒¬m ↦ m∈closure(path))" org.eventb.core.source="/ZRP1/m5.bum|org.eventb.core.machineFile#m5|org.eventb.core.invariant#'+" org.eventb.core.theorem="false"/>
<org.eventb.core.scInvariant name="c]" org.eventb.core.label="inv1" org.eventb.core.predicate="∀s⦂Nodes,n⦂Nodes·s∈Nodes∧n∈Nodes∧s≠n⇒(∀r⦂Nodes×Nodes,path⦂ℙ(Nodes×Nodes)·r∈RouteRequest∧r ↦ path∈AccumulatedPath(n)∧s=(prj1 ⦂ ℙ(Nodes×Nodes×Nodes))(r)⇒s ↦ n∈closure(path))" org.eventb.core.source="/ZRP1/m6.bum|org.eventb.core.machineFile#m6|org.eventb.core.invariant#'3" org.eventb.core.theorem="false"/>
<org.eventb.core.scInvariant name="c^" org.eventb.core.label="inv2" org.eventb.core.predicate="∀s⦂Nodes,t⦂Nodes,n⦂Nodes·s ↦ t∈RouteRequest∧n∈Nodes∧s≠n⇒(∀r⦂Nodes×Nodes,path⦂ℙ(Nodes×Nodes)·r=s ↦ t∧r ↦ path∈AccumulatedPath(n)∧n ↦ t∈closure(path)⇒s ↦ t∈closure(path))" org.eventb.core.source="/ZRP1/m6.bum|org.eventb.core.machineFile#m6|org.eventb.core.invariant#'4" org.eventb.core.theorem="true"/>
<org.eventb.core.scInvariant name="c_" org.eventb.core.label="inv1" org.eventb.core.predicate="ZoneCoverage∈Nodes → (Nodes × Nodes → ℙ(Nodes))" org.eventb.core.source="/ZRP1/m7.bum|org.eventb.core.machineFile#m7|org.eventb.core.invariant#'5" org.eventb.core.theorem="false"/>
<org.eventb.core.scInvariant name="c`" org.eventb.core.label="inv1" org.eventb.core.predicate="ReplySender∈Nodes → (Nodes ↔ Nodes × Nodes)" org.eventb.core.source="/ZRP1/m8.bum|org.eventb.core.machineFile#m8|org.eventb.core.invariant#'M" org.eventb.core.theorem="false"/>
<org.eventb.core.scInvariant name="ca" org.eventb.core.label="inv2" org.eventb.core.predicate="ReplyPath∈Nodes → (Nodes × (Nodes × Nodes) → (Nodes ↔ Nodes))" org.eventb.core.source="/ZRP1/m8.bum|org.eventb.core.machineFile#m8|org.eventb.core.invariant#'N" org.eventb.core.theorem="false"/>
<org.eventb.core.scInvariant name="cb" org.eventb.core.label="inv3" org.eventb.core.predicate="TransmittedSender∈Nodes × Nodes → (Nodes ↔ Nodes × Nodes)" org.eventb.core.source="/ZRP1/m8.bum|org.eventb.core.machineFile#m8|org.eventb.core.invariant#'O" org.eventb.core.theorem="false"/>
<org.eventb.core.scInvariant name="cc" org.eventb.core.label="inv4" org.eventb.core.predicate="TransmittedReplyPath∈Nodes × Nodes → (Nodes × Nodes → (Nodes ↔ Nodes))" org.eventb.core.source="/ZRP1/m8.bum|org.eventb.core.machineFile#m8|org.eventb.core.invariant#'P" org.eventb.core.theorem="false"/>
<org.eventb.core.scInvariant name="cd" org.eventb.core.label="inv5" org.eventb.core.predicate="∀n⦂Nodes,m⦂Nodes,r⦂Nodes×Nodes·n≠m∧TransmittedReplyPath(n ↦ m)(r)≠(∅ ⦂ ℙ(Nodes×Nodes))⇒n ↦ r∈TransmittedSender(n ↦ m)" org.eventb.core.source="/ZRP1/m8.bum|org.eventb.core.machineFile#m8|org.eventb.core.invariant#'Q" org.eventb.core.theorem="false"/>
<org.eventb.core.scInvariant name="ce" org.eventb.core.label="inv6" org.eventb.core.predicate="∀n⦂Nodes,s⦂Nodes,d⦂Nodes,rq⦂Nodes×Nodes,path⦂ℙ(Nodes×Nodes)·n∈Nodes∧s∈Nodes∧d∈Nodes∧rq=s ↦ d∧path=ReplyPath(n)(s ↦ rq)∧path≠(∅ ⦂ ℙ(Nodes×Nodes))⇒s ↦ d∈closure(path)" org.eventb.core.source="/ZRP1/m8.bum|org.eventb.core.machineFile#m8|org.eventb.core.invariant#'R" org.eventb.core.theorem="false"/>
<org.eventb.core.scVariable name="AccumulatedPath" org.eventb.core.abstract="true" org.eventb.core.concrete="true" org.eventb.core.source="/ZRP1/m8.bum|org.eventb.core.machineFile#m8|org.eventb.core.variable#t" org.eventb.core.type="ℙ(Nodes×ℙ(Nodes×Nodes×ℙ(Nodes×Nodes)))"/>
<org.eventb.core.scVariable name="BroadcastTime" org.eventb.core.abstract="true" org.eventb.core.concrete="true" org.eventb.core.source="/ZRP1/m8.bum|org.eventb.core.machineFile#m8|org.eventb.core.variable#C" org.eventb.core.type="ℙ(Nodes×ℤ)"/>
<org.eventb.core.scVariable name="DNeighborLink" org.eventb.core.abstract="true" org.eventb.core.concrete="true" org.eventb.core.source="/ZRP1/m8.bum|org.eventb.core.machineFile#m8|org.eventb.core.variable#." org.eventb.core.type="ℙ(Nodes×Nodes)"/>
<org.eventb.core.scVariable name="Flag" org.eventb.core.abstract="true" org.eventb.core.concrete="true" org.eventb.core.source="/ZRP1/m8.bum|org.eventb.core.machineFile#m8|org.eventb.core.variable#a" org.eventb.core.type="ℙ(Nodes×ℙ(Nodes×BOOL))"/>
<org.eventb.core.scVariable name="InsertionTime" org.eventb.core.abstract="true" org.eventb.core.concrete="true" org.eventb.core.source="/ZRP1/m8.bum|org.eventb.core.machineFile#m8|org.eventb.core.variable#?" org.eventb.core.type="ℙ(Nodes×ℙ(Nodes×Nodes×ℤ))"/>
<org.eventb.core.scVariable name="IntendedNeighbor" org.eventb.core.abstract="true" org.eventb.core.concrete="true" org.eventb.core.source="/ZRP1/m8.bum|org.eventb.core.machineFile#m8|org.eventb.core.variable#r" org.eventb.core.type="ℙ(Nodes×(Nodes×Nodes)×ℙ(Nodes))"/>
<org.eventb.core.scVariable name="LinkStateTable" org.eventb.core.abstract="true" org.eventb.core.concrete="true" org.eventb.core.source="/ZRP1/m8.bum|org.eventb.core.machineFile#m8|org.eventb.core.variable#3" org.eventb.core.type="ℙ(Nodes×ℙ(Nodes×Nodes))"/>
<org.eventb.core.scVariable name="NeighborLink" org.eventb.core.abstract="true" org.eventb.core.concrete="true" org.eventb.core.source="/ZRP1/m8.bum|org.eventb.core.machineFile#m8|org.eventb.core.variable#," org.eventb.core.type="ℙ(Nodes×Nodes)"/>
<org.eventb.core.scVariable name="ReplyPath" org.eventb.core.abstract="false" org.eventb.core.concrete="true" org.eventb.core.source="/ZRP1/m8.bum|org.eventb.core.machineFile#m8|org.eventb.core.variable#'J" org.eventb.core.type="ℙ(Nodes×ℙ(Nodes×(Nodes×Nodes)×ℙ(Nodes×Nodes)))"/>
<org.eventb.core.scVariable name="ReplySender" org.eventb.core.abstract="false" org.eventb.core.concrete="true" org.eventb.core.source="/ZRP1/m8.bum|org.eventb.core.machineFile#m8|org.eventb.core.variable#'I" org.eventb.core.type="ℙ(Nodes×ℙ(Nodes×(Nodes×Nodes)))"/>
<org.eventb.core.scVariable name="RouteRequest" org.eventb.core.abstract="true" org.eventb.core.concrete="true" org.eventb.core.source="/ZRP1/m8.bum|org.eventb.core.machineFile#m8|org.eventb.core.variable#p" org.eventb.core.type="ℙ(Nodes×Nodes)"/>
<org.eventb.core.scVariable name="RoutingTable" org.eventb.core.abstract="true" org.eventb.core.concrete="true" org.eventb.core.source="/ZRP1/m8.bum|org.eventb.core.machineFile#m8|org.eventb.core.variable#5" org.eventb.core.type="ℙ(Nodes×ℙ(Nodes×Nodes))"/>
<org.eventb.core.scVariable name="SeqNum" org.eventb.core.abstract="true" org.eventb.core.concrete="true" org.eventb.core.source="/ZRP1/m8.bum|org.eventb.core.machineFile#m8|org.eventb.core.variable#P" org.eventb.core.type="ℙ(Nodes×ℙ(Nodes×ℤ))"/>
<org.eventb.core.scVariable name="TTL" org.eventb.core.abstract="true" org.eventb.core.concrete="true" org.eventb.core.source="/ZRP1/m8.bum|org.eventb.core.machineFile#m8|org.eventb.core.variable#N" org.eventb.core.type="ℙ(Nodes×ℙ(Nodes×ℤ))"/>
<org.eventb.core.scVariable name="Time" org.eventb.core.abstract="true" org.eventb.core.concrete="true" org.eventb.core.source="/ZRP1/m8.bum|org.eventb.core.machineFile#m8|org.eventb.core.variable#A" org.eventb.core.type="ℤ"/>
<org.eventb.core.scVariable name="TransmittedLink" org.eventb.core.abstract="true" org.eventb.core.concrete="true" org.eventb.core.source="/ZRP1/m8.bum|org.eventb.core.machineFile#m8|org.eventb.core.variable#[" org.eventb.core.type="ℙ(Nodes×Nodes×ℙ(Nodes×ℙ(Nodes×Nodes)))"/>
<org.eventb.core.scVariable name="TransmittedPath" org.eventb.core.abstract="true" org.eventb.core.concrete="true" org.eventb.core.source="/ZRP1/m8.bum|org.eventb.core.machineFile#m8|org.eventb.core.variable#x" org.eventb.core.type="ℙ(Nodes×Nodes×ℙ(Nodes×Nodes×ℙ(Nodes×Nodes)))"/>
<org.eventb.core.scVariable name="TransmittedReplyPath" org.eventb.core.abstract="false" org.eventb.core.concrete="true" org.eventb.core.source="/ZRP1/m8.bum|org.eventb.core.machineFile#m8|org.eventb.core.variable#'L" org.eventb.core.type="ℙ(Nodes×Nodes×ℙ(Nodes×Nodes×ℙ(Nodes×Nodes)))"/>
<org.eventb.core.scVariable name="TransmittedSender" org.eventb.core.abstract="false" org.eventb.core.concrete="true" org.eventb.core.source="/ZRP1/m8.bum|org.eventb.core.machineFile#m8|org.eventb.core.variable#'K" org.eventb.core.type="ℙ(Nodes×Nodes×ℙ(Nodes×(Nodes×Nodes)))"/>
<org.eventb.core.scVariable name="TransmittedSeqNum" org.eventb.core.abstract="true" org.eventb.core.concrete="true" org.eventb.core.source="/ZRP1/m8.bum|org.eventb.core.machineFile#m8|org.eventb.core.variable#]" org.eventb.core.type="ℙ(Nodes×Nodes×ℙ(Nodes×ℤ))"/>
<org.eventb.core.scVariable name="TransmittedTTL" org.eventb.core.abstract="true" org.eventb.core.concrete="true" org.eventb.core.source="/ZRP1/m8.bum|org.eventb.core.machineFile#m8|org.eventb.core.variable#_" org.eventb.core.type="ℙ(Nodes×Nodes×ℙ(Nodes×ℤ))"/>
<org.eventb.core.scVariable name="TransmittedTag" org.eventb.core.abstract="true" org.eventb.core.concrete="true" org.eventb.core.source="/ZRP1/m8.bum|org.eventb.core.machineFile#m8|org.eventb.core.variable#v" org.eventb.core.type="ℙ(Nodes×Nodes×ℙ(Nodes×Nodes×ℤ))"/>
<org.eventb.core.scVariable name="ZoneCoverage" org.eventb.core.abstract="true" org.eventb.core.concrete="true" org.eventb.core.source="/ZRP1/m8.bum|org.eventb.core.machineFile#m8|org.eventb.core.variable#'4" org.eventb.core.type="ℙ(Nodes×ℙ(Nodes×Nodes×ℙ(Nodes)))"/>
<org.eventb.core.scEvent name="TransmittedReplyPati" org.eventb.core.accurate="true" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.label="INITIALISATION" org.eventb.core.source="/ZRP1/m8.bum|org.eventb.core.machineFile#m8|org.eventb.core.event#'5">
<org.eventb.core.scRefinesEvent name="'" org.eventb.core.scTarget="/ZRP1/m7.bcm|org.eventb.core.scMachineFile#m7|org.eventb.core.scEvent#TransmittedSeqNun" org.eventb.core.source="/ZRP1/m8.bum|org.eventb.core.machineFile#m8|org.eventb.core.event#'5"/>
<org.eventb.core.scAction name="'" org.eventb.core.assignment="NeighborLink ≔ ∅ ⦂ ℙ(Nodes×Nodes)" org.eventb.core.label="act1" org.eventb.core.source="/ZRP1/m0.bum|org.eventb.core.machineFile#m0|org.eventb.core.event#'|org.eventb.core.action#'"/>
<org.eventb.core.scAction name="(" org.eventb.core.assignment="DNeighborLink ≔ ∅ ⦂ ℙ(Nodes×Nodes)" org.eventb.core.label="act2" org.eventb.core.source="/ZRP1/m0.bum|org.eventb.core.machineFile#m0|org.eventb.core.event#'|org.eventb.core.action#("/>
<org.eventb.core.scAction name=")" org.eventb.core.assignment="LinkStateTable ≔ Nodes × {Nodes × Nodes}" org.eventb.core.label="act3" org.eventb.core.source="/ZRP1/m1.bum|org.eventb.core.machineFile#m1|org.eventb.core.event#\/|org.eventb.core.action#'"/>
<org.eventb.core.scAction name="*" org.eventb.core.assignment="RoutingTable ≔ Nodes × {Nodes × Nodes}" org.eventb.core.label="act4" org.eventb.core.source="/ZRP1/m1.bum|org.eventb.core.machineFile#m1|org.eventb.core.event#\/|org.eventb.core.action#("/>
<org.eventb.core.scAction name="+" org.eventb.core.assignment="InsertionTime ≔ Nodes × {Nodes × Nodes × {1}}" org.eventb.core.label="act5" org.eventb.core.source="/ZRP1/m2.bum|org.eventb.core.machineFile#m2|org.eventb.core.event#6|org.eventb.core.action#'"/>
<org.eventb.core.scAction name="," org.eventb.core.assignment="Time ≔ 2" org.eventb.core.label="act6" org.eventb.core.source="/ZRP1/m2.bum|org.eventb.core.machineFile#m2|org.eventb.core.event#6|org.eventb.core.action#("/>
<org.eventb.core.scAction name="-" org.eventb.core.assignment="BroadcastTime ≔ Nodes × {1}" org.eventb.core.label="act7" org.eventb.core.source="/ZRP1/m2.bum|org.eventb.core.machineFile#m2|org.eventb.core.event#6|org.eventb.core.action#)"/>
<org.eventb.core.scAction name="." org.eventb.core.assignment="TTL ≔ Nodes × {Nodes × {1}}" org.eventb.core.label="act8" org.eventb.core.source="/ZRP1/m3.bum|org.eventb.core.machineFile#m3|org.eventb.core.event#D|org.eventb.core.action#'"/>
<org.eventb.core.scAction name="/" org.eventb.core.assignment="SeqNum ≔ Nodes × {Nodes × {1}}" org.eventb.core.label="act9" org.eventb.core.source="/ZRP1/m3.bum|org.eventb.core.machineFile#m3|org.eventb.core.event#D|org.eventb.core.action#("/>
<org.eventb.core.scAction name="0" org.eventb.core.assignment="TransmittedLink ≔ Nodes × Nodes × {Nodes × {Nodes × Nodes}}" org.eventb.core.label="act14" org.eventb.core.source="/ZRP1/m4.bum|org.eventb.core.machineFile#m4|org.eventb.core.event#Q|org.eventb.core.action#+"/>
<org.eventb.core.scAction name="1" org.eventb.core.assignment="TransmittedSeqNum ≔ Nodes × Nodes × {Nodes × {1}}" org.eventb.core.label="act15" org.eventb.core.source="/ZRP1/m4.bum|org.eventb.core.machineFile#m4|org.eventb.core.event#Q|org.eventb.core.action#,"/>
<org.eventb.core.scAction name="2" org.eventb.core.assignment="TransmittedTTL ≔ Nodes × Nodes × {Nodes × {1}}" org.eventb.core.label="act16" org.eventb.core.source="/ZRP1/m4.bum|org.eventb.core.machineFile#m4|org.eventb.core.event#Q|org.eventb.core.action#-"/>
<org.eventb.core.scAction name="3" org.eventb.core.assignment="Flag ≔ Nodes × {Nodes × {FALSE}}" org.eventb.core.label="act13" org.eventb.core.source="/ZRP1/m4.bum|org.eventb.core.machineFile#m4|org.eventb.core.event#Q|org.eventb.core.action#*"/>
<org.eventb.core.scAction name="4" org.eventb.core.assignment="RouteRequest ≔ {s⦂Nodes,d⦂Nodes·s∈Nodes∧d∈Nodes∧s≠d ∣ s ↦ d}" org.eventb.core.label="act17" org.eventb.core.source="/ZRP1/m5.bum|org.eventb.core.machineFile#m5|org.eventb.core.event#b|org.eventb.core.action#'"/>
<org.eventb.core.scAction name="5" org.eventb.core.assignment="IntendedNeighbor ≔ Nodes × (Nodes × Nodes) × {Nodes}" org.eventb.core.label="act18" org.eventb.core.source="/ZRP1/m5.bum|org.eventb.core.machineFile#m5|org.eventb.core.event#b|org.eventb.core.action#("/>
<org.eventb.core.scAction name="6" org.eventb.core.assignment="AccumulatedPath ≔ Nodes × {Nodes × Nodes × {Nodes × Nodes}}" org.eventb.core.label="act19" org.eventb.core.source="/ZRP1/m5.bum|org.eventb.core.machineFile#m5|org.eventb.core.event#b|org.eventb.core.action#)"/>
<org.eventb.core.scAction name="7" org.eventb.core.assignment="TransmittedTag ≔ Nodes × Nodes × {Nodes × Nodes × {0}}" org.eventb.core.label="act20" org.eventb.core.source="/ZRP1/m5.bum|org.eventb.core.machineFile#m5|org.eventb.core.event#b|org.eventb.core.action#*"/>
<org.eventb.core.scAction name="8" org.eventb.core.assignment="TransmittedPath ≔ Nodes × Nodes × {Nodes × Nodes × {∅ ⦂ ℙ(Nodes×Nodes)}}" org.eventb.core.label="act21" org.eventb.core.source="/ZRP1/m5.bum|org.eventb.core.machineFile#m5|org.eventb.core.event#b|org.eventb.core.action#+"/>
<org.eventb.core.scAction name="9" org.eventb.core.assignment="ZoneCoverage ≔ Nodes × {Nodes × Nodes × {Nodes}}" org.eventb.core.label="act22" org.eventb.core.source="/ZRP1/m7.bum|org.eventb.core.machineFile#m7|org.eventb.core.event#y|org.eventb.core.action#'"/>
<org.eventb.core.scAction name=":" org.eventb.core.assignment="ReplySender ≔ Nodes × {Nodes × (Nodes × Nodes)}" org.eventb.core.label="act23" org.eventb.core.source="/ZRP1/m8.bum|org.eventb.core.machineFile#m8|org.eventb.core.event#'5|org.eventb.core.action#'"/>
<org.eventb.core.scAction name=";" org.eventb.core.assignment="TransmittedSender ≔ Nodes × Nodes × {Nodes × (Nodes × Nodes)}" org.eventb.core.label="act24" org.eventb.core.source="/ZRP1/m8.bum|org.eventb.core.machineFile#m8|org.eventb.core.event#'5|org.eventb.core.action#("/>
<org.eventb.core.scAction name="=" org.eventb.core.assignment="TransmittedReplyPath ≔ Nodes × Nodes × {Nodes × Nodes × {Nodes × Nodes}}" org.eventb.core.label="act25" org.eventb.core.source="/ZRP1/m8.bum|org.eventb.core.machineFile#m8|org.eventb.core.event#'5|org.eventb.core.action#)"/>
<org.eventb.core.scAction name="&gt;" org.eventb.core.assignment="ReplyPath ≔ Nodes × {Nodes × (Nodes × Nodes) × {Nodes × Nodes}}" org.eventb.core.label="act26" org.eventb.core.source="/ZRP1/m8.bum|org.eventb.core.machineFile#m8|org.eventb.core.event#'5|org.eventb.core.action#*"/>
</org.eventb.core.scEvent>
<org.eventb.core.scEvent name="TransmittedReplyPatj" org.eventb.core.accurate="true" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.label="Add_NewLink" org.eventb.core.source="/ZRP1/m8.bum|org.eventb.core.machineFile#m8|org.eventb.core.event#'6">
<org.eventb.core.scRefinesEvent name="'" org.eventb.core.scTarget="/ZRP1/m7.bcm|org.eventb.core.scMachineFile#m7|org.eventb.core.scEvent#TransmittedSeqNuo" org.eventb.core.source="/ZRP1/m8.bum|org.eventb.core.machineFile#m8|org.eventb.core.event#'6|org.eventb.core.refinesEvent#'"/>
<org.eventb.core.scGuard name="'" org.eventb.core.label="grd1" org.eventb.core.predicate="node1∈Nodes" org.eventb.core.source="/ZRP1/m0.bum|org.eventb.core.machineFile#m0|org.eventb.core.event#3|org.eventb.core.guard#)" org.eventb.core.theorem="false"/>
<org.eventb.core.scGuard name="(" org.eventb.core.label="grd2" org.eventb.core.predicate="node2∈Nodes" org.eventb.core.source="/ZRP1/m0.bum|org.eventb.core.machineFile#m0|org.eventb.core.event#3|org.eventb.core.guard#*" org.eventb.core.theorem="false"/>
<org.eventb.core.scGuard name=")" org.eventb.core.label="grd3" org.eventb.core.predicate="node1≠node2" org.eventb.core.source="/ZRP1/m0.bum|org.eventb.core.machineFile#m0|org.eventb.core.event#3|org.eventb.core.guard#+" org.eventb.core.theorem="false"/>
<org.eventb.core.scGuard name="*" org.eventb.core.label="grd4" org.eventb.core.predicate="node1 ↦ node2∉NeighborLink∧node2 ↦ node1∉NeighborLink" org.eventb.core.source="/ZRP1/m0.bum|org.eventb.core.machineFile#m0|org.eventb.core.event#3|org.eventb.core.guard#," org.eventb.core.theorem="false"/>
<org.eventb.core.scGuard name="+" org.eventb.core.label="grd5" org.eventb.core.predicate="node1 ↦ node2∉DNeighborLink∧node2 ↦ node1∉DNeighborLink" org.eventb.core.source="/ZRP1/m0.bum|org.eventb.core.machineFile#m0|org.eventb.core.event#3|org.eventb.core.guard#-" org.eventb.core.theorem="false"/>
<org.eventb.core.scAction name="node3" org.eventb.core.assignment="NeighborLink ≔ NeighborLink∪{node1 ↦ node2,node2 ↦ node1}" org.eventb.core.label="act1" org.eventb.core.source="/ZRP1/m0.bum|org.eventb.core.machineFile#m0|org.eventb.core.event#3|org.eventb.core.action#."/>
<org.eventb.core.scParameter name="node1" org.eventb.core.source="/ZRP1/m0.bum|org.eventb.core.machineFile#m0|org.eventb.core.event#3|org.eventb.core.parameter#'" org.eventb.core.type="Nodes"/>
<org.eventb.core.scParameter name="node2" org.eventb.core.source="/ZRP1/m0.bum|org.eventb.core.machineFile#m0|org.eventb.core.event#3|org.eventb.core.parameter#(" org.eventb.core.type="Nodes"/>
</org.eventb.core.scEvent>
<org.eventb.core.scEvent name="TransmittedReplyPatk" org.eventb.core.accurate="true" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.label="Add_BrokenLink" org.eventb.core.source="/ZRP1/m8.bum|org.eventb.core.machineFile#m8|org.eventb.core.event#'7">
<org.eventb.core.scRefinesEvent name="'" org.eventb.core.scTarget="/ZRP1/m7.bcm|org.eventb.core.scMachineFile#m7|org.eventb.core.scEvent#TransmittedSeqNup" org.eventb.core.source="/ZRP1/m8.bum|org.eventb.core.machineFile#m8|org.eventb.core.event#'7|org.eventb.core.refinesEvent#'"/>
<org.eventb.core.scGuard name="'" org.eventb.core.label="grd1" org.eventb.core.predicate="node1∈Nodes" org.eventb.core.source="/ZRP1/m0.bum|org.eventb.core.machineFile#m0|org.eventb.core.event#4|org.eventb.core.guard#)" org.eventb.core.theorem="false"/>
<org.eventb.core.scGuard name="(" org.eventb.core.label="grd2" org.eventb.core.predicate="node2∈Nodes" org.eventb.core.source="/ZRP1/m0.bum|org.eventb.core.machineFile#m0|org.eventb.core.event#4|org.eventb.core.guard#*" org.eventb.core.theorem="false"/>
<org.eventb.core.scGuard name=")" org.eventb.core.label="grd3" org.eventb.core.predicate="node1≠node2" org.eventb.core.source="/ZRP1/m0.bum|org.eventb.core.machineFile#m0|org.eventb.core.event#4|org.eventb.core.guard#+" org.eventb.core.theorem="false"/>
<org.eventb.core.scGuard name="*" org.eventb.core.label="grd4" org.eventb.core.predicate="node1 ↦ node2∉NeighborLink∧node2 ↦ node1∉NeighborLink" org.eventb.core.source="/ZRP1/m0.bum|org.eventb.core.machineFile#m0|org.eventb.core.event#4|org.eventb.core.guard#," org.eventb.core.theorem="false"/>
<org.eventb.core.scGuard name="+" org.eventb.core.label="grd5" org.eventb.core.predicate="node1 ↦ node2∈DNeighborLink∧node2 ↦ node1∈DNeighborLink" org.eventb.core.source="/ZRP1/m0.bum|org.eventb.core.machineFile#m0|org.eventb.core.event#4|org.eventb.core.guard#-" org.eventb.core.theorem="false"/>
<org.eventb.core.scAction name="node3" org.eventb.core.assignment="NeighborLink ≔ NeighborLink∪{node1 ↦ node2,node2 ↦ node1}" org.eventb.core.label="act1" org.eventb.core.source="/ZRP1/m0.bum|org.eventb.core.machineFile#m0|org.eventb.core.event#4|org.eventb.core.action#."/>
<org.eventb.core.scAction name="node4" org.eventb.core.assignment="DNeighborLink ≔ DNeighborLink ∖ {node1 ↦ node2,node2 ↦ node1}" org.eventb.core.label="act2" org.eventb.core.source="/ZRP1/m0.bum|org.eventb.core.machineFile#m0|org.eventb.core.event#4|org.eventb.core.action#\/"/>
<org.eventb.core.scParameter name="node1" org.eventb.core.source="/ZRP1/m0.bum|org.eventb.core.machineFile#m0|org.eventb.core.event#4|org.eventb.core.parameter#'" org.eventb.core.type="Nodes"/>
<org.eventb.core.scParameter name="node2" org.eventb.core.source="/ZRP1/m0.bum|org.eventb.core.machineFile#m0|org.eventb.core.event#4|org.eventb.core.parameter#(" org.eventb.core.type="Nodes"/>
</org.eventb.core.scEvent>
<org.eventb.core.scEvent name="TransmittedReplyPatl" org.eventb.core.accurate="true" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.label="Remove_Link" org.eventb.core.source="/ZRP1/m8.bum|org.eventb.core.machineFile#m8|org.eventb.core.event#'8">
<org.eventb.core.scRefinesEvent name="'" org.eventb.core.scTarget="/ZRP1/m7.bcm|org.eventb.core.scMachineFile#m7|org.eventb.core.scEvent#TransmittedSeqNuq" org.eventb.core.source="/ZRP1/m8.bum|org.eventb.core.machineFile#m8|org.eventb.core.event#'8|org.eventb.core.refinesEvent#'"/>
<org.eventb.core.scGuard name="'" org.eventb.core.label="grd1" org.eventb.core.predicate="node1∈Nodes" org.eventb.core.source="/ZRP1/m0.bum|org.eventb.core.machineFile#m0|org.eventb.core.event#5|org.eventb.core.guard#)" org.eventb.core.theorem="false"/>
<org.eventb.core.scGuard name="(" org.eventb.core.label="grd2" org.eventb.core.predicate="node2∈Nodes" org.eventb.core.source="/ZRP1/m0.bum|org.eventb.core.machineFile#m0|org.eventb.core.event#5|org.eventb.core.guard#*" org.eventb.core.theorem="false"/>
<org.eventb.core.scGuard name=")" org.eventb.core.label="grd3" org.eventb.core.predicate="node1≠node2" org.eventb.core.source="/ZRP1/m0.bum|org.eventb.core.machineFile#m0|org.eventb.core.event#5|org.eventb.core.guard#+" org.eventb.core.theorem="false"/>
<org.eventb.core.scGuard name="*" org.eventb.core.label="grd4" org.eventb.core.predicate="node1 ↦ node2∈NeighborLink∧node2 ↦ node1∈NeighborLink" org.eventb.core.source="/ZRP1/m0.bum|org.eventb.core.machineFile#m0|org.eventb.core.event#5|org.eventb.core.guard#," org.eventb.core.theorem="false"/>
<org.eventb.core.scAction name="node3" org.eventb.core.assignment="NeighborLink ≔ NeighborLink ∖ {node1 ↦ node2,node2 ↦ node1}" org.eventb.core.label="act1" org.eventb.core.source="/ZRP1/m0.bum|org.eventb.core.machineFile#m0|org.eventb.core.event#5|org.eventb.core.action#-"/>
<org.eventb.core.scAction name="node4" org.eventb.core.assignment="DNeighborLink ≔ DNeighborLink∪{node1 ↦ node2,node2 ↦ node1}" org.eventb.core.label="act2" org.eventb.core.source="/ZRP1/m0.bum|org.eventb.core.machineFile#m0|org.eventb.core.event#5|org.eventb.core.action#."/>
<org.eventb.core.scParameter name="node1" org.eventb.core.source="/ZRP1/m0.bum|org.eventb.core.machineFile#m0|org.eventb.core.event#5|org.eventb.core.parameter#'" org.eventb.core.type="Nodes"/>
<org.eventb.core.scParameter name="node2" org.eventb.core.source="/ZRP1/m0.bum|org.eventb.core.machineFile#m0|org.eventb.core.event#5|org.eventb.core.parameter#(" org.eventb.core.type="Nodes"/>
</org.eventb.core.scEvent>
<org.eventb.core.scEvent name="TransmittedReplyPatm" org.eventb.core.accurate="true" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.label="updateRoutingTable" org.eventb.core.source="/ZRP1/m8.bum|org.eventb.core.machineFile#m8|org.eventb.core.event#'9">
<org.eventb.core.scRefinesEvent name="'" org.eventb.core.scTarget="/ZRP1/m7.bcm|org.eventb.core.scMachineFile#m7|org.eventb.core.scEvent#TransmittedSeqNur" org.eventb.core.source="/ZRP1/m8.bum|org.eventb.core.machineFile#m8|org.eventb.core.event#'9|org.eventb.core.refinesEvent#'"/>
<org.eventb.core.scGuard name="'" org.eventb.core.label="grd1" org.eventb.core.predicate="node∈Nodes" org.eventb.core.source="/ZRP1/m1.bum|org.eventb.core.machineFile#m1|org.eventb.core.event#9|org.eventb.core.guard#*" org.eventb.core.theorem="false"/>
<org.eventb.core.scGuard name="(" org.eventb.core.label="grd2" org.eventb.core.predicate="addRoutes∈Nodes ↔ Nodes" org.eventb.core.source="/ZRP1/m1.bum|org.eventb.core.machineFile#m1|org.eventb.core.event#9|org.eventb.core.guard#+" org.eventb.core.theorem="false"/>
<org.eventb.core.scGuard name=")" org.eventb.core.label="grd3" org.eventb.core.predicate="removeRoutes∈Nodes ↔ Nodes" org.eventb.core.source="/ZRP1/m1.bum|org.eventb.core.machineFile#m1|org.eventb.core.event#9|org.eventb.core.guard#," org.eventb.core.theorem="false"/>
<org.eventb.core.scGuard name="*" org.eventb.core.label="grd4" org.eventb.core.predicate="¬(addRoutes=(∅ ⦂ ℙ(Nodes×Nodes))∧removeRoutes=(∅ ⦂ ℙ(Nodes×Nodes)))" org.eventb.core.source="/ZRP1/m1.bum|org.eventb.core.machineFile#m1|org.eventb.core.event#9|org.eventb.core.guard#-" org.eventb.core.theorem="false"/>
<org.eventb.core.scAction name="removeRoutet" org.eventb.core.assignment="RoutingTable ≔ RoutingTable{node ↦ (RoutingTable(node) ∖ removeRoutes)∪addRoutes}" org.eventb.core.label="act1" org.eventb.core.source="/ZRP1/m1.bum|org.eventb.core.machineFile#m1|org.eventb.core.event#9|org.eventb.core.action#."/>
<org.eventb.core.scParameter name="addRoutes" org.eventb.core.source="/ZRP1/m1.bum|org.eventb.core.machineFile#m1|org.eventb.core.event#9|org.eventb.core.parameter#(" org.eventb.core.type="ℙ(Nodes×Nodes)"/>
<org.eventb.core.scParameter name="node" org.eventb.core.source="/ZRP1/m1.bum|org.eventb.core.machineFile#m1|org.eventb.core.event#9|org.eventb.core.parameter#'" org.eventb.core.type="Nodes"/>
<org.eventb.core.scParameter name="removeRoutes" org.eventb.core.source="/ZRP1/m1.bum|org.eventb.core.machineFile#m1|org.eventb.core.event#9|org.eventb.core.parameter#)" org.eventb.core.type="ℙ(Nodes×Nodes)"/>
</org.eventb.core.scEvent>
<org.eventb.core.scEvent name="TransmittedReplyPatn" org.eventb.core.accurate="true" org.eventb.core.convergence="0" org.eventb.core.extended="false" org.eventb.core.label="updateRoutingTable_IARP" org.eventb.core.source="/ZRP1/m8.bum|org.eventb.core.machineFile#m8|org.eventb.core.event#'S">
<org.eventb.core.scRefinesEvent name="'" org.eventb.core.scTarget="/ZRP1/m7.bcm|org.eventb.core.scMachineFile#m7|org.eventb.core.scEvent#TransmittedSeqNur" org.eventb.core.source="/ZRP1/m8.bum|org.eventb.core.machineFile#m8|org.eventb.core.event#'S|org.eventb.core.refinesEvent#'"/>
<org.eventb.core.scGuard name="(" org.eventb.core.label="grd1" org.eventb.core.predicate="node∈Nodes" org.eventb.core.source="/ZRP1/m8.bum|org.eventb.core.machineFile#m8|org.eventb.core.event#'S|org.eventb.core.guard#internal1" org.eventb.core.theorem="false"/>
<org.eventb.core.scGuard name=")" org.eventb.core.label="grd2" org.eventb.core.predicate="addRoutes∈Nodes ↔ Nodes" org.eventb.core.source="/ZRP1/m8.bum|org.eventb.core.machineFile#m8|org.eventb.core.event#'S|org.eventb.core.guard#internal2" org.eventb.core.theorem="false"/>
<org.eventb.core.scGuard name="*" org.eventb.core.label="grd3" org.eventb.core.predicate="removeRoutes∈Nodes ↔ Nodes" org.eventb.core.source="/ZRP1/m8.bum|org.eventb.core.machineFile#m8|org.eventb.core.event#'S|org.eventb.core.guard#internal3" org.eventb.core.theorem="false"/>
<org.eventb.core.scGuard name="+" org.eventb.core.label="grd4" org.eventb.core.predicate="¬(addRoutes=(∅ ⦂ ℙ(Nodes×Nodes))∧removeRoutes=(∅ ⦂ ℙ(Nodes×Nodes)))" org.eventb.core.source="/ZRP1/m8.bum|org.eventb.core.machineFile#m8|org.eventb.core.event#'S|org.eventb.core.guard#internal4" org.eventb.core.theorem="false"/>
<org.eventb.core.scGuard name="," org.eventb.core.label="grd5" org.eventb.core.predicate="zone={m⦂Nodes·node ↦ m∈closure(LinkStateTable(node))∨m=node ∣ m}" org.eventb.core.source="/ZRP1/m8.bum|org.eventb.core.machineFile#m8|org.eventb.core.event#'S|org.eventb.core.guard#*" org.eventb.core.theorem="false"/>
<org.eventb.core.scGuard name="-" org.eventb.core.label="grd6" org.eventb.core.predicate="addRoutes={p⦂Nodes,q⦂Nodes·p ↦ q∈Nodes × Nodes∧p ↦ q∈LinkStateTable(node) ∣ p ↦ q}" org.eventb.core.source="/ZRP1/m8.bum|org.eventb.core.machineFile#m8|org.eventb.core.event#'S|org.eventb.core.guard#+" org.eventb.core.theorem="false"/>
<org.eventb.core.scGuard name="." org.eventb.core.label="grd7" org.eventb.core.predicate="nodes={m⦂Nodes·node ↦ m∉closure(LinkStateTable(node))∧node ↦ m∈closure(RoutingTable(node))∧(∃c⦂ℙ(Nodes×Nodes)·c⊆RoutingTable(node)∧node ↦ m∈closure(c)∧card(c)≤zoneRadius) ∣ m}" org.eventb.core.source="/ZRP1/m8.bum|org.eventb.core.machineFile#m8|org.eventb.core.event#'S|org.eventb.core.guard#," org.eventb.core.theorem="false"/>
<org.eventb.core.scGuard name="/" org.eventb.core.label="grd8" org.eventb.core.predicate="removeRoutes=(nodes∪zone) ◁ RoutingTable(node) ▷ (nodes∪zone)" org.eventb.core.source="/ZRP1/m8.bum|org.eventb.core.machineFile#m8|org.eventb.core.event#'S|org.eventb.core.guard#-" org.eventb.core.theorem="false"/>
<org.eventb.core.scGuard name="0" org.eventb.core.label="grd9" org.eventb.core.predicate="nodes≠(∅ ⦂ ℙ(Nodes))∨¬addRoutes=zone ◁ RoutingTable(node) ▷ zone" org.eventb.core.source="/ZRP1/m8.bum|org.eventb.core.machineFile#m8|org.eventb.core.event#'S|org.eventb.core.guard#." org.eventb.core.theorem="false"/>
<org.eventb.core.scParameter name="addRoutes" org.eventb.core.source="/ZRP1/m8.bum|org.eventb.core.machineFile#m8|org.eventb.core.event#'S|org.eventb.core.parameter#internal1" org.eventb.core.type="ℙ(Nodes×Nodes)"/>
<org.eventb.core.scParameter name="node" org.eventb.core.source="/ZRP1/m8.bum|org.eventb.core.machineFile#m8|org.eventb.core.event#'S|org.eventb.core.parameter#'" org.eventb.core.type="Nodes"/>
<org.eventb.core.scParameter name="nodes" org.eventb.core.source="/ZRP1/m8.bum|org.eventb.core.machineFile#m8|org.eventb.core.event#'S|org.eventb.core.parameter#)" org.eventb.core.type="ℙ(Nodes)"/>
<org.eventb.core.scParameter name="removeRoutes" org.eventb.core.source="/ZRP1/m8.bum|org.eventb.core.machineFile#m8|org.eventb.core.event#'S|org.eventb.core.parameter#internal2" org.eventb.core.type="ℙ(Nodes×Nodes)"/>
<org.eventb.core.scParameter name="zone" org.eventb.core.source="/ZRP1/m8.bum|org.eventb.core.machineFile#m8|org.eventb.core.event#'S|org.eventb.core.parameter#(" org.eventb.core.type="ℙ(Nodes)"/>
<org.eventb.core.scAction name="removeRoutet" org.eventb.core.assignment="RoutingTable ≔ RoutingTable{node ↦ (RoutingTable(node) ∖ removeRoutes)∪addRoutes}" org.eventb.core.label="act1" org.eventb.core.source="/ZRP1/m8.bum|org.eventb.core.machineFile#m8|org.eventb.core.event#'S|org.eventb.core.action#."/>
</org.eventb.core.scEvent>
<org.eventb.core.scEvent name="TransmittedReplyPato" org.eventb.core.accurate="true" org.eventb.core.convergence="0" org.eventb.core.extended="false" org.eventb.core.label="updateRoutingTable_Reply" org.eventb.core.source="/ZRP1/m8.bum|org.eventb.core.machineFile#m8|org.eventb.core.event#'T">
<org.eventb.core.scRefinesEvent name="'" org.eventb.core.scTarget="/ZRP1/m7.bcm|org.eventb.core.scMachineFile#m7|org.eventb.core.scEvent#TransmittedSeqNur" org.eventb.core.source="/ZRP1/m8.bum|org.eventb.core.machineFile#m8|org.eventb.core.event#'T|org.eventb.core.refinesEvent#'"/>
<org.eventb.core.scGuard name="(" org.eventb.core.label="grd2" org.eventb.core.predicate="addRoutes∈Nodes ↔ Nodes" org.eventb.core.source="/ZRP1/m8.bum|org.eventb.core.machineFile#m8|org.eventb.core.event#'T|org.eventb.core.guard#+" org.eventb.core.theorem="false"/>
<org.eventb.core.scGuard name=")" org.eventb.core.label="grd3" org.eventb.core.predicate="removeRoutes∈Nodes ↔ Nodes" org.eventb.core.source="/ZRP1/m8.bum|org.eventb.core.machineFile#m8|org.eventb.core.event#'T|org.eventb.core.guard#," org.eventb.core.theorem="false"/>
<org.eventb.core.scGuard name="*" org.eventb.core.label="grd5" org.eventb.core.predicate="sender∈Nodes∧receiver∈Nodes" org.eventb.core.source="/ZRP1/m8.bum|org.eventb.core.machineFile#m8|org.eventb.core.event#'T|org.eventb.core.guard#0" org.eventb.core.theorem="false"/>
<org.eventb.core.scGuard name="+" org.eventb.core.label="grd6" org.eventb.core.predicate="¬addRoutes=(∅ ⦂ ℙ(Nodes×Nodes))∧removeRoutes=(∅ ⦂ ℙ(Nodes×Nodes))" org.eventb.core.source="/ZRP1/m8.bum|org.eventb.core.machineFile#m8|org.eventb.core.event#'T|org.eventb.core.guard#1" org.eventb.core.theorem="false"/>
<org.eventb.core.scGuard name="," org.eventb.core.label="grd7" org.eventb.core.predicate="sender ↦ request∈TransmittedSender(sender ↦ receiver)" org.eventb.core.source="/ZRP1/m8.bum|org.eventb.core.machineFile#m8|org.eventb.core.event#'T|org.eventb.core.guard#2" org.eventb.core.theorem="false"/>
<org.eventb.core.scGuard name="-" org.eventb.core.label="grd8" org.eventb.core.predicate="path≠(∅ ⦂ ℙ(Nodes×Nodes))∧path=TransmittedReplyPath(sender ↦ receiver)(request)" org.eventb.core.source="/ZRP1/m8.bum|org.eventb.core.machineFile#m8|org.eventb.core.event#'T|org.eventb.core.guard#6" org.eventb.core.theorem="false"/>
<org.eventb.core.scGuard name="." org.eventb.core.label="grd9" org.eventb.core.predicate="request∈closure(path)" org.eventb.core.source="/ZRP1/m8.bum|org.eventb.core.machineFile#m8|org.eventb.core.event#'T|org.eventb.core.guard#7" org.eventb.core.theorem="false"/>
<org.eventb.core.scGuard name="/" org.eventb.core.label="grd10" org.eventb.core.predicate="receiver∈dom(path) ∖ {p⦂Nodes·sender ↦ p∈closure(path)∨p=sender ∣ p}" org.eventb.core.source="/ZRP1/m8.bum|org.eventb.core.machineFile#m8|org.eventb.core.event#'T|org.eventb.core.guard#8" org.eventb.core.theorem="false"/>
<org.eventb.core.scGuard name="0" org.eventb.core.label="grd11" org.eventb.core.predicate="addRoutes={p⦂Nodes·p∈dom(path)∧p ↦ receiver∈closure(path) ∣ p} ⩤ path" org.eventb.core.source="/ZRP1/m8.bum|org.eventb.core.machineFile#m8|org.eventb.core.event#'T|org.eventb.core.guard#9" org.eventb.core.theorem="false"/>
<org.eventb.core.scGuard name="1" org.eventb.core.label="grd12" org.eventb.core.predicate="¬addRoutes⊆RoutingTable(receiver)" org.eventb.core.source="/ZRP1/m8.bum|org.eventb.core.machineFile#m8|org.eventb.core.event#'T|org.eventb.core.guard#:" org.eventb.core.theorem="false"/>
<org.eventb.core.scGuard name="2" org.eventb.core.label="grd13" org.eventb.core.predicate="node∈Nodes" org.eventb.core.source="/ZRP1/m8.bum|org.eventb.core.machineFile#m8|org.eventb.core.event#'T|org.eventb.core.guard#D" org.eventb.core.theorem="false"/>
<org.eventb.core.scParameter name="addRoutes" org.eventb.core.source="/ZRP1/m8.bum|org.eventb.core.machineFile#m8|org.eventb.core.event#'T|org.eventb.core.parameter#(" org.eventb.core.type="ℙ(Nodes×Nodes)"/>
<org.eventb.core.scParameter name="node" org.eventb.core.source="/ZRP1/m8.bum|org.eventb.core.machineFile#m8|org.eventb.core.event#'T|org.eventb.core.parameter#C" org.eventb.core.type="Nodes"/>
<org.eventb.core.scParameter name="path" org.eventb.core.source="/ZRP1/m8.bum|org.eventb.core.machineFile#m8|org.eventb.core.event#'T|org.eventb.core.parameter#5" org.eventb.core.type="ℙ(Nodes×Nodes)"/>
<org.eventb.core.scParameter name="receiver" org.eventb.core.source="/ZRP1/m8.bum|org.eventb.core.machineFile#m8|org.eventb.core.event#'T|org.eventb.core.parameter#3" org.eventb.core.type="Nodes"/>
<org.eventb.core.scParameter name="removeRoutes" org.eventb.core.source="/ZRP1/m8.bum|org.eventb.core.machineFile#m8|org.eventb.core.event#'T|org.eventb.core.parameter#)" org.eventb.core.type="ℙ(Nodes×Nodes)"/>
<org.eventb.core.scParameter name="request" org.eventb.core.source="/ZRP1/m8.bum|org.eventb.core.machineFile#m8|org.eventb.core.event#'T|org.eventb.core.parameter#4" org.eventb.core.type="Nodes×Nodes"/>
<org.eventb.core.scParameter name="sender" org.eventb.core.source="/ZRP1/m8.bum|org.eventb.core.machineFile#m8|org.eventb.core.event#'T|org.eventb.core.parameter#\/" org.eventb.core.type="Nodes"/>
<org.eventb.core.scAction name="removeRoutet" org.eventb.core.assignment="RoutingTable ≔ RoutingTable{receiver ↦ (RoutingTable(receiver) ∖ removeRoutes)∪addRoutes}" org.eventb.core.label="act2" org.eventb.core.source="/ZRP1/m8.bum|org.eventb.core.machineFile#m8|org.eventb.core.event#'T|org.eventb.core.action#="/>
<org.eventb.core.scAction name="removeRouteu" org.eventb.core.assignment="ReplySender ≔ ReplySender{receiver ↦ ReplySender(receiver)∪{sender ↦ request}}" org.eventb.core.label="act3" org.eventb.core.source="/ZRP1/m8.bum|org.eventb.core.machineFile#m8|org.eventb.core.event#'T|org.eventb.core.action#&gt;"/>
<org.eventb.core.scAction name="removeRoutev" org.eventb.core.assignment="ReplyPath ≔ ReplyPath{receiver ↦ ReplyPath(receiver){sender ↦ request ↦ path}}" org.eventb.core.label="act4" org.eventb.core.source="/ZRP1/m8.bum|org.eventb.core.machineFile#m8|org.eventb.core.event#'T|org.eventb.core.action#?"/>
<org.eventb.core.scAction name="removeRoutew" org.eventb.core.assignment="TransmittedSender ≔ TransmittedSender{sender ↦ receiver ↦ TransmittedSender(sender ↦ receiver) ∖ {sender ↦ request}}" org.eventb.core.label="act5" org.eventb.core.source="/ZRP1/m8.bum|org.eventb.core.machineFile#m8|org.eventb.core.event#'T|org.eventb.core.action#@"/>
<org.eventb.core.scAction name="removeRoutex" org.eventb.core.assignment="TransmittedReplyPath ≔ TransmittedReplyPath{sender ↦ receiver ↦ TransmittedReplyPath(sender ↦ receiver){request ↦ (∅ ⦂ ℙ(Nodes×Nodes))}}" org.eventb.core.label="act6" org.eventb.core.source="/ZRP1/m8.bum|org.eventb.core.machineFile#m8|org.eventb.core.event#'T|org.eventb.core.action#A"/>
</org.eventb.core.scEvent>
<org.eventb.core.scEvent name="TransmittedReplyPatp" org.eventb.core.accurate="true" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.label="stabilize" org.eventb.core.source="/ZRP1/m8.bum|org.eventb.core.machineFile#m8|org.eventb.core.event#':">
<org.eventb.core.scRefinesEvent name="'" org.eventb.core.scTarget="/ZRP1/m7.bcm|org.eventb.core.scMachineFile#m7|org.eventb.core.scEvent#TransmittedSeqNus" org.eventb.core.source="/ZRP1/m8.bum|org.eventb.core.machineFile#m8|org.eventb.core.event#':|org.eventb.core.refinesEvent#'"/>
<org.eventb.core.scGuard name="(" org.eventb.core.label="grd1" org.eventb.core.predicate="nodes∈Nodes → ℙ(Nodes)" org.eventb.core.source="/ZRP1/m3.bum|org.eventb.core.machineFile#m3|org.eventb.core.event#I|org.eventb.core.guard#(" org.eventb.core.theorem="false"/>
<org.eventb.core.scGuard name=")" org.eventb.core.label="grd2" org.eventb.core.predicate="∀m⦂Nodes,n⦂Nodes·m ↦ n∈NeighborLink⇔m ↦ n∈LinkStateTable(m)" org.eventb.core.source="/ZRP1/m3.bum|org.eventb.core.machineFile#m3|org.eventb.core.event#I|org.eventb.core.guard#)" org.eventb.core.theorem="false"/>
<org.eventb.core.scGuard name="*" org.eventb.core.label="grd3" org.eventb.core.predicate="∀m⦂Nodes,n⦂Nodes·m ↦ n∈closure(NeighborLink)∧n∈nodes(m)⇒(∀x⦂Nodes·m ↦ x∈LinkStateTable(m)⇔m ↦ x∈LinkStateTable(n))" org.eventb.core.source="/ZRP1/m3.bum|org.eventb.core.machineFile#m3|org.eventb.core.event#I|org.eventb.core.guard#*" org.eventb.core.theorem="false"/>
<org.eventb.core.scGuard name="+" org.eventb.core.label="grd4" org.eventb.core.predicate="nodes=(λx⦂Nodes·x∈Nodes ∣ dom(LinkStateTable(x)))" org.eventb.core.source="/ZRP1/m3.bum|org.eventb.core.machineFile#m3|org.eventb.core.event#I|org.eventb.core.guard#+" org.eventb.core.theorem="false"/>
<org.eventb.core.scGuard name="," org.eventb.core.label="grd5" org.eventb.core.predicate="∀x⦂Nodes,y⦂Nodes·x∈Nodes∧y∈nodes(x)⇒x ↦ y∈closure(LinkStateTable(x))" org.eventb.core.source="/ZRP1/m3.bum|org.eventb.core.machineFile#m3|org.eventb.core.event#I|org.eventb.core.guard#," org.eventb.core.theorem="false"/>
<org.eventb.core.scParameter name="nodes" org.eventb.core.source="/ZRP1/m3.bum|org.eventb.core.machineFile#m3|org.eventb.core.event#I|org.eventb.core.parameter#'" org.eventb.core.type="ℙ(Nodes×ℙ(Nodes))"/>
</org.eventb.core.scEvent>
<org.eventb.core.scEvent name="TransmittedReplyPatq" org.eventb.core.accurate="true" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.label="obtainLinks" org.eventb.core.source="/ZRP1/m8.bum|org.eventb.core.machineFile#m8|org.eventb.core.event#';">
<org.eventb.core.scRefinesEvent name="'" org.eventb.core.scTarget="/ZRP1/m7.bcm|org.eventb.core.scMachineFile#m7|org.eventb.core.scEvent#TransmittedSeqNut" org.eventb.core.source="/ZRP1/m8.bum|org.eventb.core.machineFile#m8|org.eventb.core.event#';|org.eventb.core.refinesEvent#'"/>
<org.eventb.core.scGuard name="(" org.eventb.core.label="grd1" org.eventb.core.predicate="addlinks={p⦂Nodes,m⦂Nodes·p=node∧p ↦ m∈NeighborLink∧p ↦ m∉LinkStateTable(p) ∣ p ↦ m}" org.eventb.core.source="/ZRP1/m3.bum|org.eventb.core.machineFile#m3|org.eventb.core.event#J|org.eventb.core.guard#*" org.eventb.core.theorem="false"/>
<org.eventb.core.scGuard name=")" org.eventb.core.label="grd2" org.eventb.core.predicate="removelinks={p⦂Nodes,m⦂Nodes·p=node∧p ↦ m∉NeighborLink∧p ↦ m∈LinkStateTable(p) ∣ p ↦ m}" org.eventb.core.source="/ZRP1/m3.bum|org.eventb.core.machineFile#m3|org.eventb.core.event#J|org.eventb.core.guard#+" org.eventb.core.theorem="false"/>
<org.eventb.core.scGuard name="*" org.eventb.core.label="grd3" org.eventb.core.predicate="Time − BroadcastTime(node)≥period" org.eventb.core.source="/ZRP1/m3.bum|org.eventb.core.machineFile#m3|org.eventb.core.event#J|org.eventb.core.guard#," org.eventb.core.theorem="false"/>
<org.eventb.core.scGuard name="+" org.eventb.core.label="grd4" org.eventb.core.predicate="rest=removelinks ⩤ InsertionTime(node)" org.eventb.core.source="/ZRP1/m3.bum|org.eventb.core.machineFile#m3|org.eventb.core.event#J|org.eventb.core.guard#-" org.eventb.core.theorem="false"/>
<org.eventb.core.scGuard name="," org.eventb.core.label="grd5" org.eventb.core.predicate="node2∈Nodes∧node2≠node∧node ↦ node2∈NeighborLink" org.eventb.core.source="/ZRP1/m3.bum|org.eventb.core.machineFile#m3|org.eventb.core.event#J|org.eventb.core.guard#4" org.eventb.core.theorem="false"/>
<org.eventb.core.scGuard name="-" org.eventb.core.label="grd6" org.eventb.core.predicate="node∈Nodes" org.eventb.core.source="/ZRP1/m3.bum|org.eventb.core.machineFile#m3|org.eventb.core.event#J|org.eventb.core.guard#5" org.eventb.core.theorem="false"/>
<org.eventb.core.scGuard name="." org.eventb.core.label="grd7" org.eventb.core.predicate="addlinks∈Nodes ↔ Nodes" org.eventb.core.source="/ZRP1/m3.bum|org.eventb.core.machineFile#m3|org.eventb.core.event#J|org.eventb.core.guard#6" org.eventb.core.theorem="false"/>
<org.eventb.core.scGuard name="/" org.eventb.core.label="grd8" org.eventb.core.predicate="removelinks∈Nodes ↔ Nodes" org.eventb.core.source="/ZRP1/m3.bum|org.eventb.core.machineFile#m3|org.eventb.core.event#J|org.eventb.core.guard#7" org.eventb.core.theorem="false"/>
<org.eventb.core.scAction name="removelinkt" org.eventb.core.assignment="InsertionTime ≔ InsertionTime{node ↦ rest((({node} ◁ dom(rest))∪addlinks) × {Time})}" org.eventb.core.label="act1" org.eventb.core.source="/ZRP1/m3.bum|org.eventb.core.machineFile#m3|org.eventb.core.event#J|org.eventb.core.action#."/>
<org.eventb.core.scAction name="removelinku" org.eventb.core.assignment="BroadcastTime ≔ BroadcastTime{node ↦ Time}" org.eventb.core.label="act2" org.eventb.core.source="/ZRP1/m3.bum|org.eventb.core.machineFile#m3|org.eventb.core.event#J|org.eventb.core.action#\/"/>
<org.eventb.core.scAction name="removelinkv" org.eventb.core.assignment="TTL ≔ TTL{node ↦ TTL(node){node2 ↦ zoneRadius − 1}}" org.eventb.core.label="act3" org.eventb.core.source="/ZRP1/m3.bum|org.eventb.core.machineFile#m3|org.eventb.core.event#J|org.eventb.core.action#1"/>
<org.eventb.core.scAction name="removelinkw" org.eventb.core.assignment="SeqNum ≔ SeqNum{node ↦ SeqNum(node){node2 ↦ SeqNum(node)(node2)+1}}" org.eventb.core.label="act4" org.eventb.core.source="/ZRP1/m3.bum|org.eventb.core.machineFile#m3|org.eventb.core.event#J|org.eventb.core.action#2"/>
<org.eventb.core.scAction name="removelinkx" org.eventb.core.assignment="LinkStateTable ≔ LinkStateTable{node ↦ (LinkStateTable(node) ∖ removelinks)∪addlinks}" org.eventb.core.label="act5" org.eventb.core.source="/ZRP1/m3.bum|org.eventb.core.machineFile#m3|org.eventb.core.event#J|org.eventb.core.action#8"/>
<org.eventb.core.scParameter name="addlinks" org.eventb.core.source="/ZRP1/m3.bum|org.eventb.core.machineFile#m3|org.eventb.core.event#J|org.eventb.core.parameter#(" org.eventb.core.type="ℙ(Nodes×Nodes)"/>
<org.eventb.core.scParameter name="node" org.eventb.core.source="/ZRP1/m3.bum|org.eventb.core.machineFile#m3|org.eventb.core.event#J|org.eventb.core.parameter#'" org.eventb.core.type="Nodes"/>
<org.eventb.core.scParameter name="node2" org.eventb.core.source="/ZRP1/m3.bum|org.eventb.core.machineFile#m3|org.eventb.core.event#J|org.eventb.core.parameter#3" org.eventb.core.type="Nodes"/>
<org.eventb.core.scParameter name="removelinks" org.eventb.core.source="/ZRP1/m3.bum|org.eventb.core.machineFile#m3|org.eventb.core.event#J|org.eventb.core.parameter#)" org.eventb.core.type="ℙ(Nodes×Nodes)"/>
<org.eventb.core.scParameter name="rest" org.eventb.core.source="/ZRP1/m3.bum|org.eventb.core.machineFile#m3|org.eventb.core.event#J|org.eventb.core.parameter#0" org.eventb.core.type="ℙ(Nodes×Nodes×ℤ)"/>
</org.eventb.core.scEvent>
<org.eventb.core.scEvent name="TransmittedReplyPatr" org.eventb.core.accurate="true" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.label="transferLinks" org.eventb.core.source="/ZRP1/m8.bum|org.eventb.core.machineFile#m8|org.eventb.core.event#'=">
<org.eventb.core.scRefinesEvent name="'" org.eventb.core.scTarget="/ZRP1/m7.bcm|org.eventb.core.scMachineFile#m7|org.eventb.core.scEvent#TransmittedSeqNuu" org.eventb.core.source="/ZRP1/m8.bum|org.eventb.core.machineFile#m8|org.eventb.core.event#'=|org.eventb.core.refinesEvent#'"/>
<org.eventb.core.scGuard name="(" org.eventb.core.label="grd1" org.eventb.core.predicate="sender∈Nodes∧receiver∈Nodes∧transferNode∈Nodes" org.eventb.core.source="/ZRP1/m3.bum|org.eventb.core.machineFile#m3|org.eventb.core.event#K|org.eventb.core.guard#4" org.eventb.core.theorem="false"/>
<org.eventb.core.scGuard name=")" org.eventb.core.label="grd2" org.eventb.core.predicate="sender≠receiver∧receiver≠transferNode" org.eventb.core.source="/ZRP1/m3.bum|org.eventb.core.machineFile#m3|org.eventb.core.event#K|org.eventb.core.guard#=" org.eventb.core.theorem="false"/>
<org.eventb.core.scGuard name="*" org.eventb.core.label="grd3" org.eventb.core.predicate="sender ↦ receiver∈LinkStateTable(sender)" org.eventb.core.source="/ZRP1/m3.bum|org.eventb.core.machineFile#m3|org.eventb.core.event#K|org.eventb.core.guard#," org.eventb.core.theorem="false"/>
<org.eventb.core.scGuard name="+" org.eventb.core.label="grd4" org.eventb.core.predicate="receivedlinks∈Nodes ↔ Nodes∧dom(receivedlinks)={transferNode}" org.eventb.core.source="/ZRP1/m3.bum|org.eventb.core.machineFile#m3|org.eventb.core.event#K|org.eventb.core.guard#-" org.eventb.core.theorem="false"/>
<org.eventb.core.scGuard name="," org.eventb.core.label="grd5" org.eventb.core.predicate="addlinks=receivedlinks" org.eventb.core.source="/ZRP1/m3.bum|org.eventb.core.machineFile#m3|org.eventb.core.event#K|org.eventb.core.guard#." org.eventb.core.theorem="false"/>
<org.eventb.core.scGuard name="-" org.eventb.core.label="grd6" org.eventb.core.predicate="removelinks={transferNode} ◁ LinkStateTable(receiver)" org.eventb.core.source="/ZRP1/m3.bum|org.eventb.core.machineFile#m3|org.eventb.core.event#K|org.eventb.core.guard#\/" org.eventb.core.theorem="false"/>
<org.eventb.core.scGuard name="." org.eventb.core.label="grd7" org.eventb.core.predicate="receivedTTL&gt;0∧receivedSeqNum&gt;0" org.eventb.core.source="/ZRP1/m3.bum|org.eventb.core.machineFile#m3|org.eventb.core.event#K|org.eventb.core.guard#8" org.eventb.core.theorem="false"/>
<org.eventb.core.scGuard name="/" org.eventb.core.label="grd8" org.eventb.core.predicate="SeqNum(receiver)(transferNode)≤receivedSeqNum" org.eventb.core.source="/ZRP1/m3.bum|org.eventb.core.machineFile#m3|org.eventb.core.event#K|org.eventb.core.guard#9" org.eventb.core.theorem="false"/>
<org.eventb.core.scGuard name="0" org.eventb.core.label="grd9" org.eventb.core.predicate="addlinks∈Nodes ↔ Nodes" org.eventb.core.source="/ZRP1/m3.bum|org.eventb.core.machineFile#m3|org.eventb.core.event#K|org.eventb.core.guard#@" org.eventb.core.theorem="false"/>
<org.eventb.core.scGuard name="1" org.eventb.core.label="grd10" org.eventb.core.predicate="removelinks∈Nodes ↔ Nodes" org.eventb.core.source="/ZRP1/m3.bum|org.eventb.core.machineFile#m3|org.eventb.core.event#K|org.eventb.core.guard#A" org.eventb.core.theorem="false"/>
<org.eventb.core.scAction name="receivedSeqNun" org.eventb.core.assignment="LinkStateTable ≔ LinkStateTable{receiver ↦ (LinkStateTable(receiver) ∖ removelinks)∪addlinks}" org.eventb.core.label="act1" org.eventb.core.source="/ZRP1/m3.bum|org.eventb.core.machineFile#m3|org.eventb.core.event#K|org.eventb.core.action#0"/>
<org.eventb.core.scAction name="receivedSeqNuo" org.eventb.core.assignment="InsertionTime ≔ InsertionTime{receiver ↦ (removelinks ⩤ InsertionTime(receiver))∪(addlinks × {Time})}" org.eventb.core.label="act2" org.eventb.core.source="/ZRP1/m3.bum|org.eventb.core.machineFile#m3|org.eventb.core.event#K|org.eventb.core.action#5"/>
<org.eventb.core.scAction name="receivedSeqNup" org.eventb.core.assignment="TTL ≔ TTL{receiver ↦ TTL(receiver){transferNode ↦ receivedTTL − 1}}" org.eventb.core.label="act3" org.eventb.core.source="/ZRP1/m3.bum|org.eventb.core.machineFile#m3|org.eventb.core.event#K|org.eventb.core.action#:"/>
<org.eventb.core.scAction name="receivedSeqNuq" org.eventb.core.assignment="SeqNum ≔ SeqNum{receiver ↦ SeqNum(receiver){transferNode ↦ receivedSeqNum}}" org.eventb.core.label="act4" org.eventb.core.source="/ZRP1/m3.bum|org.eventb.core.machineFile#m3|org.eventb.core.event#K|org.eventb.core.action#;"/>
<org.eventb.core.scParameter name="addlinks" org.eventb.core.source="/ZRP1/m3.bum|org.eventb.core.machineFile#m3|org.eventb.core.event#K|org.eventb.core.parameter#&gt;" org.eventb.core.type="ℙ(Nodes×Nodes)"/>
<org.eventb.core.scParameter name="receivedSeqNum" org.eventb.core.source="/ZRP1/m3.bum|org.eventb.core.machineFile#m3|org.eventb.core.event#K|org.eventb.core.parameter#7" org.eventb.core.type="ℤ"/>
<org.eventb.core.scParameter name="receivedTTL" org.eventb.core.source="/ZRP1/m3.bum|org.eventb.core.machineFile#m3|org.eventb.core.event#K|org.eventb.core.parameter#6" org.eventb.core.type="ℤ"/>
<org.eventb.core.scParameter name="receivedlinks" org.eventb.core.source="/ZRP1/m3.bum|org.eventb.core.machineFile#m3|org.eventb.core.event#K|org.eventb.core.parameter#1" org.eventb.core.type="ℙ(Nodes×Nodes)"/>
<org.eventb.core.scParameter name="receiver" org.eventb.core.source="/ZRP1/m3.bum|org.eventb.core.machineFile#m3|org.eventb.core.event#K|org.eventb.core.parameter#(" org.eventb.core.type="Nodes"/>
<org.eventb.core.scParameter name="removelinks" org.eventb.core.source="/ZRP1/m3.bum|org.eventb.core.machineFile#m3|org.eventb.core.event#K|org.eventb.core.parameter#?" org.eventb.core.type="ℙ(Nodes×Nodes)"/>
<org.eventb.core.scParameter name="sender" org.eventb.core.source="/ZRP1/m3.bum|org.eventb.core.machineFile#m3|org.eventb.core.event#K|org.eventb.core.parameter#'" org.eventb.core.type="Nodes"/>
<org.eventb.core.scParameter name="transferNode" org.eventb.core.source="/ZRP1/m3.bum|org.eventb.core.machineFile#m3|org.eventb.core.event#K|org.eventb.core.parameter#)" org.eventb.core.type="Nodes"/>
</org.eventb.core.scEvent>
<org.eventb.core.scEvent name="TransmittedReplyPats" org.eventb.core.accurate="true" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.label="refreshLinks" org.eventb.core.source="/ZRP1/m8.bum|org.eventb.core.machineFile#m8|org.eventb.core.event#'&gt;">
<org.eventb.core.scRefinesEvent name="'" org.eventb.core.scTarget="/ZRP1/m7.bcm|org.eventb.core.scMachineFile#m7|org.eventb.core.scEvent#TransmittedSeqNuv" org.eventb.core.source="/ZRP1/m8.bum|org.eventb.core.machineFile#m8|org.eventb.core.event#'&gt;|org.eventb.core.refinesEvent#'"/>
<org.eventb.core.scGuard name="(" org.eventb.core.label="grd1" org.eventb.core.predicate="oldlinks={x⦂Nodes,y⦂Nodes·x ↦ y∈LinkStateTable(node)∧x≠node∧Time − InsertionTime(node)(x ↦ y)≥lifetime ∣ x ↦ y}" org.eventb.core.source="/ZRP1/m2.bum|org.eventb.core.machineFile#m2|org.eventb.core.event#L|org.eventb.core.guard#(" org.eventb.core.theorem="false"/>
<org.eventb.core.scGuard name=")" org.eventb.core.label="grd2" org.eventb.core.predicate="oldlinks∈ℙ(Nodes × Nodes)" org.eventb.core.source="/ZRP1/m2.bum|org.eventb.core.machineFile#m2|org.eventb.core.event#L|org.eventb.core.guard#." org.eventb.core.theorem="false"/>
<org.eventb.core.scGuard name="*" org.eventb.core.label="grd3" org.eventb.core.predicate="node∈Nodes" org.eventb.core.source="/ZRP1/m2.bum|org.eventb.core.machineFile#m2|org.eventb.core.event#L|org.eventb.core.guard#0" org.eventb.core.theorem="false"/>
<org.eventb.core.scAction name="oldlinkt" org.eventb.core.assignment="LinkStateTable ≔ LinkStateTable{node ↦ LinkStateTable(node) ∖ oldlinks}" org.eventb.core.label="act1" org.eventb.core.source="/ZRP1/m2.bum|org.eventb.core.machineFile#m2|org.eventb.core.event#L|org.eventb.core.action#)"/>
<org.eventb.core.scAction name="oldlinku" org.eventb.core.assignment="InsertionTime ≔ InsertionTime{node ↦ oldlinks ⩤ InsertionTime(node)}" org.eventb.core.label="act2" org.eventb.core.source="/ZRP1/m2.bum|org.eventb.core.machineFile#m2|org.eventb.core.event#L|org.eventb.core.action#*"/>
<org.eventb.core.scParameter name="node" org.eventb.core.source="/ZRP1/m2.bum|org.eventb.core.machineFile#m2|org.eventb.core.event#L|org.eventb.core.parameter#\/" org.eventb.core.type="Nodes"/>
<org.eventb.core.scParameter name="oldlinks" org.eventb.core.source="/ZRP1/m2.bum|org.eventb.core.machineFile#m2|org.eventb.core.event#L|org.eventb.core.parameter#'" org.eventb.core.type="ℙ(Nodes×Nodes)"/>
</org.eventb.core.scEvent>
<org.eventb.core.scEvent name="TransmittedReplyPatt" org.eventb.core.accurate="true" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.label="timeClock" org.eventb.core.source="/ZRP1/m8.bum|org.eventb.core.machineFile#m8|org.eventb.core.event#'?">
<org.eventb.core.scRefinesEvent name="'" org.eventb.core.scTarget="/ZRP1/m7.bcm|org.eventb.core.scMachineFile#m7|org.eventb.core.scEvent#TransmittedSeqNuw" org.eventb.core.source="/ZRP1/m8.bum|org.eventb.core.machineFile#m8|org.eventb.core.event#'?|org.eventb.core.refinesEvent#'"/>
<org.eventb.core.scGuard name="'" org.eventb.core.label="grd1" org.eventb.core.predicate="tick∈ℕ1" org.eventb.core.source="/ZRP1/m2.bum|org.eventb.core.machineFile#m2|org.eventb.core.event#M|org.eventb.core.guard#(" org.eventb.core.theorem="false"/>
<org.eventb.core.scAction name="ticl" org.eventb.core.assignment="Time ≔ Time+tick" org.eventb.core.label="act1" org.eventb.core.source="/ZRP1/m2.bum|org.eventb.core.machineFile#m2|org.eventb.core.event#M|org.eventb.core.action#)"/>
<org.eventb.core.scParameter name="tick" org.eventb.core.source="/ZRP1/m2.bum|org.eventb.core.machineFile#m2|org.eventb.core.event#M|org.eventb.core.parameter#'" org.eventb.core.type="ℤ"/>
</org.eventb.core.scEvent>
<org.eventb.core.scEvent name="TransmittedReplyPatu" org.eventb.core.accurate="true" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.label="discardLinks" org.eventb.core.source="/ZRP1/m8.bum|org.eventb.core.machineFile#m8|org.eventb.core.event#'@">
<org.eventb.core.scRefinesEvent name="'" org.eventb.core.scTarget="/ZRP1/m7.bcm|org.eventb.core.scMachineFile#m7|org.eventb.core.scEvent#TransmittedSeqNux" org.eventb.core.source="/ZRP1/m8.bum|org.eventb.core.machineFile#m8|org.eventb.core.event#'@|org.eventb.core.refinesEvent#'"/>
<org.eventb.core.scGuard name="'" org.eventb.core.label="grd1" org.eventb.core.predicate="sender∈Nodes∧receiver∈Nodes∧transferNode∈Nodes" org.eventb.core.source="/ZRP1/m3.bum|org.eventb.core.machineFile#m3|org.eventb.core.event#T|org.eventb.core.guard#*" org.eventb.core.theorem="false"/>
<org.eventb.core.scGuard name="(" org.eventb.core.label="grd2" org.eventb.core.predicate="sender≠receiver∧receiver≠transferNode" org.eventb.core.source="/ZRP1/m3.bum|org.eventb.core.machineFile#m3|org.eventb.core.event#T|org.eventb.core.guard#+" org.eventb.core.theorem="false"/>
<org.eventb.core.scGuard name=")" org.eventb.core.label="grd3" org.eventb.core.predicate="sender ↦ receiver∈LinkStateTable(sender)" org.eventb.core.source="/ZRP1/m3.bum|org.eventb.core.machineFile#m3|org.eventb.core.event#T|org.eventb.core.guard#-" org.eventb.core.theorem="false"/>
<org.eventb.core.scGuard name="*" org.eventb.core.label="grd4" org.eventb.core.predicate="SeqNum(receiver)(transferNode)&gt;receivedSeqNum" org.eventb.core.source="/ZRP1/m3.bum|org.eventb.core.machineFile#m3|org.eventb.core.event#T|org.eventb.core.guard#." org.eventb.core.theorem="false"/>
<org.eventb.core.scParameter name="receivedSeqNum" org.eventb.core.source="/ZRP1/m3.bum|org.eventb.core.machineFile#m3|org.eventb.core.event#T|org.eventb.core.parameter#," org.eventb.core.type="ℤ"/>
<org.eventb.core.scParameter name="receiver" org.eventb.core.source="/ZRP1/m3.bum|org.eventb.core.machineFile#m3|org.eventb.core.event#T|org.eventb.core.parameter#(" org.eventb.core.type="Nodes"/>
<org.eventb.core.scParameter name="sender" org.eventb.core.source="/ZRP1/m3.bum|org.eventb.core.machineFile#m3|org.eventb.core.event#T|org.eventb.core.parameter#'" org.eventb.core.type="Nodes"/>
<org.eventb.core.scParameter name="transferNode" org.eventb.core.source="/ZRP1/m3.bum|org.eventb.core.machineFile#m3|org.eventb.core.event#T|org.eventb.core.parameter#)" org.eventb.core.type="Nodes"/>
</org.eventb.core.scEvent>
<org.eventb.core.scEvent name="TransmittedReplyPatv" org.eventb.core.accurate="true" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.label="sendLinks" org.eventb.core.source="/ZRP1/m8.bum|org.eventb.core.machineFile#m8|org.eventb.core.event#'A">
<org.eventb.core.scRefinesEvent name="'" org.eventb.core.scTarget="/ZRP1/m7.bcm|org.eventb.core.scMachineFile#m7|org.eventb.core.scEvent#TransmittedSeqNuy" org.eventb.core.source="/ZRP1/m8.bum|org.eventb.core.machineFile#m8|org.eventb.core.event#'A|org.eventb.core.refinesEvent#'"/>
<org.eventb.core.scGuard name="'" org.eventb.core.label="grd1" org.eventb.core.predicate="sender∈Nodes" org.eventb.core.source="/ZRP1/m4.bum|org.eventb.core.machineFile#m4|org.eventb.core.event#e|org.eventb.core.guard#*" org.eventb.core.theorem="false"/>
<org.eventb.core.scGuard name="(" org.eventb.core.label="grd2" org.eventb.core.predicate="transferNode∈Nodes" org.eventb.core.source="/ZRP1/m4.bum|org.eventb.core.machineFile#m4|org.eventb.core.event#e|org.eventb.core.guard#+" org.eventb.core.theorem="false"/>
<org.eventb.core.scGuard name=")" org.eventb.core.label="grd3" org.eventb.core.predicate="transferNode∈dom(LinkStateTable(sender))" org.eventb.core.source="/ZRP1/m4.bum|org.eventb.core.machineFile#m4|org.eventb.core.event#e|org.eventb.core.guard#," org.eventb.core.theorem="false"/>
<org.eventb.core.scGuard name="*" org.eventb.core.label="grd4" org.eventb.core.predicate="links={x⦂Nodes,y⦂Nodes·x=sender∧x ↦ y∈LinkStateTable(x) ∣ x ↦ y}" org.eventb.core.source="/ZRP1/m4.bum|org.eventb.core.machineFile#m4|org.eventb.core.event#e|org.eventb.core.guard#-" org.eventb.core.theorem="false"/>
<org.eventb.core.scGuard name="+" org.eventb.core.label="grd5" org.eventb.core.predicate="∀l⦂Nodes×Nodes·l∈links⇒TransmittedLink(l)(transferNode)=(∅ ⦂ ℙ(Nodes×Nodes))" org.eventb.core.source="/ZRP1/m4.bum|org.eventb.core.machineFile#m4|org.eventb.core.event#e|org.eventb.core.guard#." org.eventb.core.theorem="false"/>
<org.eventb.core.scGuard name="," org.eventb.core.label="grd6" org.eventb.core.predicate="TTL(sender)(transferNode)&gt;0" org.eventb.core.source="/ZRP1/m4.bum|org.eventb.core.machineFile#m4|org.eventb.core.event#e|org.eventb.core.guard#\/" org.eventb.core.theorem="false"/>
<org.eventb.core.scAction name="transferNodf" org.eventb.core.assignment="TransmittedLink ≔ TransmittedLink(λl⦂Nodes×Nodes·l∈links ∣ TransmittedLink(l){transferNode ↦ {transferNode} ◁ LinkStateTable(sender)})" org.eventb.core.label="act1" org.eventb.core.source="/ZRP1/m4.bum|org.eventb.core.machineFile#m4|org.eventb.core.event#e|org.eventb.core.action#0"/>
<org.eventb.core.scAction name="transferNodg" org.eventb.core.assignment="TransmittedSeqNum ≔ TransmittedSeqNum(λl⦂Nodes×Nodes·l∈links ∣ TransmittedSeqNum(l){transferNode ↦ SeqNum(sender)(transferNode)})" org.eventb.core.label="act2" org.eventb.core.source="/ZRP1/m4.bum|org.eventb.core.machineFile#m4|org.eventb.core.event#e|org.eventb.core.action#1"/>
<org.eventb.core.scAction name="transferNodh" org.eventb.core.assignment="TransmittedTTL ≔ TransmittedTTL(λl⦂Nodes×Nodes·l∈links ∣ TransmittedTTL(l){transferNode ↦ TTL(sender)(transferNode)})" org.eventb.core.label="act3" org.eventb.core.source="/ZRP1/m4.bum|org.eventb.core.machineFile#m4|org.eventb.core.event#e|org.eventb.core.action#2"/>
<org.eventb.core.scAction name="transferNodi" org.eventb.core.assignment="Flag ≔ Flag{sender ↦ Flag(sender){transferNode ↦ TRUE}}" org.eventb.core.label="act4" org.eventb.core.source="/ZRP1/m4.bum|org.eventb.core.machineFile#m4|org.eventb.core.event#e|org.eventb.core.action#3"/>
<org.eventb.core.scParameter name="links" org.eventb.core.source="/ZRP1/m4.bum|org.eventb.core.machineFile#m4|org.eventb.core.event#e|org.eventb.core.parameter#)" org.eventb.core.type="ℙ(Nodes×Nodes)"/>
<org.eventb.core.scParameter name="sender" org.eventb.core.source="/ZRP1/m4.bum|org.eventb.core.machineFile#m4|org.eventb.core.event#e|org.eventb.core.parameter#'" org.eventb.core.type="Nodes"/>
<org.eventb.core.scParameter name="transferNode" org.eventb.core.source="/ZRP1/m4.bum|org.eventb.core.machineFile#m4|org.eventb.core.event#e|org.eventb.core.parameter#(" org.eventb.core.type="Nodes"/>
</org.eventb.core.scEvent>
<org.eventb.core.scEvent name="TransmittedReplyPatw" org.eventb.core.accurate="true" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.label="receiveLinks" org.eventb.core.source="/ZRP1/m8.bum|org.eventb.core.machineFile#m8|org.eventb.core.event#'B">
<org.eventb.core.scRefinesEvent name="'" org.eventb.core.scTarget="/ZRP1/m7.bcm|org.eventb.core.scMachineFile#m7|org.eventb.core.scEvent#TransmittedSeqNuz" org.eventb.core.source="/ZRP1/m8.bum|org.eventb.core.machineFile#m8|org.eventb.core.event#'B|org.eventb.core.refinesEvent#'"/>
<org.eventb.core.scGuard name="(" org.eventb.core.label="grd1" org.eventb.core.predicate="sender∈Nodes∧receiver∈Nodes∧transferNode∈Nodes" org.eventb.core.source="/ZRP1/m4.bum|org.eventb.core.machineFile#m4|org.eventb.core.event#f|org.eventb.core.guard#4" org.eventb.core.theorem="false"/>
<org.eventb.core.scGuard name=")" org.eventb.core.label="grd2" org.eventb.core.predicate="sender≠receiver∧receiver≠transferNode" org.eventb.core.source="/ZRP1/m4.bum|org.eventb.core.machineFile#m4|org.eventb.core.event#f|org.eventb.core.guard#=" org.eventb.core.theorem="false"/>
<org.eventb.core.scGuard name="*" org.eventb.core.label="grd6" org.eventb.core.predicate="removelinks={transferNode} ◁ LinkStateTable(receiver)" org.eventb.core.source="/ZRP1/m4.bum|org.eventb.core.machineFile#m4|org.eventb.core.event#f|org.eventb.core.guard#\/" org.eventb.core.theorem="false"/>
<org.eventb.core.scGuard name="+" org.eventb.core.label="grd9" org.eventb.core.predicate="addlinks=TransmittedLink(sender ↦ receiver)(transferNode)" org.eventb.core.source="/ZRP1/m4.bum|org.eventb.core.machineFile#m4|org.eventb.core.event#f|org.eventb.core.guard#@" org.eventb.core.theorem="false"/>
<org.eventb.core.scGuard name="," org.eventb.core.label="grd10" org.eventb.core.predicate="TransmittedLink(sender ↦ receiver)(transferNode)≠(∅ ⦂ ℙ(Nodes×Nodes))" org.eventb.core.source="/ZRP1/m4.bum|org.eventb.core.machineFile#m4|org.eventb.core.event#f|org.eventb.core.guard#A" org.eventb.core.theorem="false"/>
<org.eventb.core.scGuard name="-" org.eventb.core.label="grd11" org.eventb.core.predicate="TransmittedTTL(sender ↦ receiver)(transferNode)&gt;0∧TransmittedSeqNum(sender ↦ receiver)(transferNode)&gt;0" org.eventb.core.source="/ZRP1/m4.bum|org.eventb.core.machineFile#m4|org.eventb.core.event#f|org.eventb.core.guard#B" org.eventb.core.theorem="false"/>
<org.eventb.core.scGuard name="." org.eventb.core.label="grd12" org.eventb.core.predicate="Flag(receiver)(transferNode)=TRUE" org.eventb.core.source="/ZRP1/m4.bum|org.eventb.core.machineFile#m4|org.eventb.core.event#f|org.eventb.core.guard#C" org.eventb.core.theorem="false"/>
<org.eventb.core.scGuard name="/" org.eventb.core.label="grd13" org.eventb.core.predicate="SeqNum(receiver)(transferNode)≤TransmittedSeqNum(sender ↦ receiver)(transferNode)" org.eventb.core.source="/ZRP1/m4.bum|org.eventb.core.machineFile#m4|org.eventb.core.event#f|org.eventb.core.guard#D" org.eventb.core.theorem="false"/>
<org.eventb.core.scAction name="transferNodf" org.eventb.core.assignment="TransmittedLink ≔ TransmittedLink{sender ↦ receiver ↦ TransmittedLink(sender ↦ receiver){transferNode ↦ (∅ ⦂ ℙ(Nodes×Nodes))}}" org.eventb.core.label="act1" org.eventb.core.source="/ZRP1/m4.bum|org.eventb.core.machineFile#m4|org.eventb.core.event#f|org.eventb.core.action#0"/>
<org.eventb.core.scAction name="transferNodg" org.eventb.core.assignment="TransmittedSeqNum ≔ TransmittedSeqNum{sender ↦ receiver ↦ TransmittedSeqNum(sender ↦ receiver){transferNode ↦ 0}}" org.eventb.core.label="act2" org.eventb.core.source="/ZRP1/m4.bum|org.eventb.core.machineFile#m4|org.eventb.core.event#f|org.eventb.core.action#5"/>
<org.eventb.core.scAction name="transferNodh" org.eventb.core.assignment="TransmittedTTL ≔ TransmittedTTL{sender ↦ receiver ↦ TransmittedTTL(sender ↦ receiver){transferNode ↦ 0}}" org.eventb.core.label="act3" org.eventb.core.source="/ZRP1/m4.bum|org.eventb.core.machineFile#m4|org.eventb.core.event#f|org.eventb.core.action#:"/>
<org.eventb.core.scAction name="transferNodi" org.eventb.core.assignment="Flag ≔ Flag{receiver ↦ Flag(receiver){transferNode ↦ FALSE}}" org.eventb.core.label="act4" org.eventb.core.source="/ZRP1/m4.bum|org.eventb.core.machineFile#m4|org.eventb.core.event#f|org.eventb.core.action#;"/>
<org.eventb.core.scAction name="transferNodj" org.eventb.core.assignment="LinkStateTable ≔ LinkStateTable{receiver ↦ (LinkStateTable(receiver) ∖ removelinks)∪addlinks}" org.eventb.core.label="act5" org.eventb.core.source="/ZRP1/m4.bum|org.eventb.core.machineFile#m4|org.eventb.core.event#f|org.eventb.core.action#F"/>
<org.eventb.core.scAction name="transferNodk" org.eventb.core.assignment="InsertionTime ≔ InsertionTime{receiver ↦ (removelinks ⩤ InsertionTime(receiver))∪(addlinks × {Time})}" org.eventb.core.label="act6" org.eventb.core.source="/ZRP1/m4.bum|org.eventb.core.machineFile#m4|org.eventb.core.event#f|org.eventb.core.action#G"/>
<org.eventb.core.scParameter name="addlinks" org.eventb.core.source="/ZRP1/m4.bum|org.eventb.core.machineFile#m4|org.eventb.core.event#f|org.eventb.core.parameter#&gt;" org.eventb.core.type="ℙ(Nodes×Nodes)"/>
<org.eventb.core.scParameter name="receiver" org.eventb.core.source="/ZRP1/m4.bum|org.eventb.core.machineFile#m4|org.eventb.core.event#f|org.eventb.core.parameter#(" org.eventb.core.type="Nodes"/>
<org.eventb.core.scParameter name="removelinks" org.eventb.core.source="/ZRP1/m4.bum|org.eventb.core.machineFile#m4|org.eventb.core.event#f|org.eventb.core.parameter#?" org.eventb.core.type="ℙ(Nodes×Nodes)"/>
<org.eventb.core.scParameter name="sender" org.eventb.core.source="/ZRP1/m4.bum|org.eventb.core.machineFile#m4|org.eventb.core.event#f|org.eventb.core.parameter#'" org.eventb.core.type="Nodes"/>
<org.eventb.core.scParameter name="transferNode" org.eventb.core.source="/ZRP1/m4.bum|org.eventb.core.machineFile#m4|org.eventb.core.event#f|org.eventb.core.parameter#)" org.eventb.core.type="Nodes"/>
</org.eventb.core.scEvent>
<org.eventb.core.scEvent name="TransmittedReplyPatx" org.eventb.core.accurate="true" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.label="cancleSendingLinks" org.eventb.core.source="/ZRP1/m8.bum|org.eventb.core.machineFile#m8|org.eventb.core.event#'C">
<org.eventb.core.scRefinesEvent name="'" org.eventb.core.scTarget="/ZRP1/m7.bcm|org.eventb.core.scMachineFile#m7|org.eventb.core.scEvent#TransmittedSeqNu{" org.eventb.core.source="/ZRP1/m8.bum|org.eventb.core.machineFile#m8|org.eventb.core.event#'C|org.eventb.core.refinesEvent#'"/>
<org.eventb.core.scGuard name="'" org.eventb.core.label="grd1" org.eventb.core.predicate="sender∈Nodes" org.eventb.core.source="/ZRP1/m4.bum|org.eventb.core.machineFile#m4|org.eventb.core.event#h|org.eventb.core.guard#'" org.eventb.core.theorem="false"/>
<org.eventb.core.scGuard name="(" org.eventb.core.label="grd2" org.eventb.core.predicate="transferNode∈Nodes" org.eventb.core.source="/ZRP1/m4.bum|org.eventb.core.machineFile#m4|org.eventb.core.event#h|org.eventb.core.guard#+" org.eventb.core.theorem="false"/>
<org.eventb.core.scGuard name=")" org.eventb.core.label="grd3" org.eventb.core.predicate="transferNode∈dom(LinkStateTable(sender))" org.eventb.core.source="/ZRP1/m4.bum|org.eventb.core.machineFile#m4|org.eventb.core.event#h|org.eventb.core.guard#," org.eventb.core.theorem="false"/>
<org.eventb.core.scAction name="transferNodf" org.eventb.core.assignment="Flag ≔ Flag{sender ↦ Flag(sender){transferNode ↦ FALSE}}" org.eventb.core.label="act1" org.eventb.core.source="/ZRP1/m4.bum|org.eventb.core.machineFile#m4|org.eventb.core.event#h|org.eventb.core.action#-"/>
<org.eventb.core.scParameter name="sender" org.eventb.core.source="/ZRP1/m4.bum|org.eventb.core.machineFile#m4|org.eventb.core.event#h|org.eventb.core.parameter#(" org.eventb.core.type="Nodes"/>
<org.eventb.core.scParameter name="transferNode" org.eventb.core.source="/ZRP1/m4.bum|org.eventb.core.machineFile#m4|org.eventb.core.event#h|org.eventb.core.parameter#*" org.eventb.core.type="Nodes"/>
</org.eventb.core.scEvent>
<org.eventb.core.scEvent name="TransmittedReplyPaty" org.eventb.core.accurate="true" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.label="sourceForwardRequest" org.eventb.core.source="/ZRP1/m8.bum|org.eventb.core.machineFile#m8|org.eventb.core.event#'D">
<org.eventb.core.scRefinesEvent name="'" org.eventb.core.scTarget="/ZRP1/m7.bcm|org.eventb.core.scMachineFile#m7|org.eventb.core.scEvent#TransmittedSeqNu\|" org.eventb.core.source="/ZRP1/m8.bum|org.eventb.core.machineFile#m8|org.eventb.core.event#'D|org.eventb.core.refinesEvent#'"/>
<org.eventb.core.scGuard name="(" org.eventb.core.label="grd1" org.eventb.core.predicate="source∈Nodes∧destination∈Nodes" org.eventb.core.source="/ZRP1/m7.bum|org.eventb.core.machineFile#m7|org.eventb.core.event#'3|org.eventb.core.guard#*" org.eventb.core.theorem="false"/>
<org.eventb.core.scGuard name=")" org.eventb.core.label="grd2" org.eventb.core.predicate="request=source ↦ destination" org.eventb.core.source="/ZRP1/m7.bum|org.eventb.core.machineFile#m7|org.eventb.core.event#'3|org.eventb.core.guard#+" org.eventb.core.theorem="false"/>
<org.eventb.core.scGuard name="*" org.eventb.core.label="grd3" org.eventb.core.predicate="request∉RouteRequest" org.eventb.core.source="/ZRP1/m7.bum|org.eventb.core.machineFile#m7|org.eventb.core.event#'3|org.eventb.core.guard#," org.eventb.core.theorem="false"/>
<org.eventb.core.scGuard name="+" org.eventb.core.label="grd4" org.eventb.core.predicate="source≠destination" org.eventb.core.source="/ZRP1/m7.bum|org.eventb.core.machineFile#m7|org.eventb.core.event#'3|org.eventb.core.guard#-" org.eventb.core.theorem="false"/>
<org.eventb.core.scGuard name="," org.eventb.core.label="grd5" org.eventb.core.predicate="source ↦ destination∉closure(RoutingTable(source))" org.eventb.core.source="/ZRP1/m7.bum|org.eventb.core.machineFile#m7|org.eventb.core.event#'3|org.eventb.core.guard#." org.eventb.core.theorem="false"/>
<org.eventb.core.scGuard name="-" org.eventb.core.label="grd6" org.eventb.core.predicate="nodes={q⦂Nodes·source ↦ q∈LinkStateTable(source)∧(∃p⦂Nodes,c⦂ℙ(Nodes×Nodes)·c⊆LinkStateTable(source)∧q ↦ p∈closure(c)∧card(c)=zoneRadius − 1∧(∀s⦂ℙ(Nodes×Nodes)·s⊆LinkStateTable(source)∧q ↦ p∈closure(s)∧card(s)≥card(c))) ∣ q}" org.eventb.core.source="/ZRP1/m7.bum|org.eventb.core.machineFile#m7|org.eventb.core.event#'3|org.eventb.core.guard#\/" org.eventb.core.theorem="false"/>
<org.eventb.core.scGuard name="." org.eventb.core.label="grd7" org.eventb.core.predicate="nodes≠(∅ ⦂ ℙ(Nodes))" org.eventb.core.source="/ZRP1/m7.bum|org.eventb.core.machineFile#m7|org.eventb.core.event#'3|org.eventb.core.guard#0" org.eventb.core.theorem="false"/>
<org.eventb.core.scGuard name="/" org.eventb.core.label="grd8" org.eventb.core.predicate="links={p⦂Nodes,q⦂Nodes·p=source∧q∈Nodes ∣ p ↦ q}" org.eventb.core.source="/ZRP1/m7.bum|org.eventb.core.machineFile#m7|org.eventb.core.event#'3|org.eventb.core.guard#1" org.eventb.core.theorem="false"/>
<org.eventb.core.scGuard name="0" org.eventb.core.label="grd9" org.eventb.core.predicate="∀l⦂Nodes×Nodes·l∈links⇒TransmittedTag(l)(request)=0" org.eventb.core.source="/ZRP1/m7.bum|org.eventb.core.machineFile#m7|org.eventb.core.event#'3|org.eventb.core.guard#2" org.eventb.core.theorem="false"/>
<org.eventb.core.scGuard name="1" org.eventb.core.label="grd10" org.eventb.core.predicate="request∉dom(AccumulatedPath(source))" org.eventb.core.source="/ZRP1/m7.bum|org.eventb.core.machineFile#m7|org.eventb.core.event#'3|org.eventb.core.guard#3" org.eventb.core.theorem="false"/>
<org.eventb.core.scGuard name="2" org.eventb.core.label="grd11" org.eventb.core.predicate="zone={m⦂Nodes·source ↦ m∈closure(LinkStateTable(source))∨m=source ∣ m}" org.eventb.core.source="/ZRP1/m7.bum|org.eventb.core.machineFile#m7|org.eventb.core.event#'3|org.eventb.core.guard#=" org.eventb.core.theorem="false"/>
<org.eventb.core.scGuard name="3" org.eventb.core.label="grd12" org.eventb.core.predicate="source∉ZoneCoverage(source)(request)" org.eventb.core.source="/ZRP1/m7.bum|org.eventb.core.machineFile#m7|org.eventb.core.event#'3|org.eventb.core.guard#&gt;" org.eventb.core.theorem="false"/>
<org.eventb.core.scAction name="destinatioo" org.eventb.core.assignment="RouteRequest ≔ RouteRequest∪{request}" org.eventb.core.label="act1" org.eventb.core.source="/ZRP1/m7.bum|org.eventb.core.machineFile#m7|org.eventb.core.event#'3|org.eventb.core.action#4"/>
<org.eventb.core.scAction name="destinatiop" org.eventb.core.assignment="AccumulatedPath ≔ AccumulatedPath{source ↦ AccumulatedPath(source){request ↦ (∅ ⦂ ℙ(Nodes×Nodes))}}" org.eventb.core.label="act2" org.eventb.core.source="/ZRP1/m7.bum|org.eventb.core.machineFile#m7|org.eventb.core.event#'3|org.eventb.core.action#5"/>
<org.eventb.core.scAction name="destinatioq" org.eventb.core.assignment="IntendedNeighbor ≔ IntendedNeighbor{source ↦ request ↦ nodes}" org.eventb.core.label="act3" org.eventb.core.source="/ZRP1/m7.bum|org.eventb.core.machineFile#m7|org.eventb.core.event#'3|org.eventb.core.action#6"/>
<org.eventb.core.scAction name="destinatior" org.eventb.core.assignment="TransmittedTag ≔ TransmittedTag(λl⦂Nodes×Nodes·l∈links ∣ TransmittedTag(l){request ↦ 1})" org.eventb.core.label="act4" org.eventb.core.source="/ZRP1/m7.bum|org.eventb.core.machineFile#m7|org.eventb.core.event#'3|org.eventb.core.action#7"/>
<org.eventb.core.scAction name="destinatios" org.eventb.core.assignment="TransmittedPath ≔ TransmittedPath(λl⦂Nodes×Nodes·l∈links ∣ TransmittedPath(l){request ↦ (∅ ⦂ ℙ(Nodes×Nodes))})" org.eventb.core.label="act5" org.eventb.core.source="/ZRP1/m7.bum|org.eventb.core.machineFile#m7|org.eventb.core.event#'3|org.eventb.core.action#8"/>
<org.eventb.core.scAction name="destinatiot" org.eventb.core.assignment="ZoneCoverage ≔ ZoneCoverage{source ↦ ZoneCoverage(source){request ↦ zone}}" org.eventb.core.label="act6" org.eventb.core.source="/ZRP1/m7.bum|org.eventb.core.machineFile#m7|org.eventb.core.event#'3|org.eventb.core.action#?"/>
<org.eventb.core.scParameter name="destination" org.eventb.core.source="/ZRP1/m7.bum|org.eventb.core.machineFile#m7|org.eventb.core.event#'3|org.eventb.core.parameter#(" org.eventb.core.type="Nodes"/>
<org.eventb.core.scParameter name="links" org.eventb.core.source="/ZRP1/m7.bum|org.eventb.core.machineFile#m7|org.eventb.core.event#'3|org.eventb.core.parameter#:" org.eventb.core.type="ℙ(Nodes×Nodes)"/>
<org.eventb.core.scParameter name="nodes" org.eventb.core.source="/ZRP1/m7.bum|org.eventb.core.machineFile#m7|org.eventb.core.event#'3|org.eventb.core.parameter#9" org.eventb.core.type="ℙ(Nodes)"/>
<org.eventb.core.scParameter name="request" org.eventb.core.source="/ZRP1/m7.bum|org.eventb.core.machineFile#m7|org.eventb.core.event#'3|org.eventb.core.parameter#)" org.eventb.core.type="Nodes×Nodes"/>
<org.eventb.core.scParameter name="source" org.eventb.core.source="/ZRP1/m7.bum|org.eventb.core.machineFile#m7|org.eventb.core.event#'3|org.eventb.core.parameter#'" org.eventb.core.type="Nodes"/>
<org.eventb.core.scParameter name="zone" org.eventb.core.source="/ZRP1/m7.bum|org.eventb.core.machineFile#m7|org.eventb.core.event#'3|org.eventb.core.parameter#;" org.eventb.core.type="ℙ(Nodes)"/>
</org.eventb.core.scEvent>
<org.eventb.core.scEvent name="TransmittedReplyPatz" org.eventb.core.accurate="true" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.label="sendReply" org.eventb.core.source="/ZRP1/m8.bum|org.eventb.core.machineFile#m8|org.eventb.core.event#'E">
<org.eventb.core.scRefinesEvent name="'" org.eventb.core.scTarget="/ZRP1/m7.bcm|org.eventb.core.scMachineFile#m7|org.eventb.core.scEvent#TransmittedSeqNu}" org.eventb.core.source="/ZRP1/m8.bum|org.eventb.core.machineFile#m8|org.eventb.core.event#'E|org.eventb.core.refinesEvent#'"/>
<org.eventb.core.scGuard name="'" org.eventb.core.label="grd1" org.eventb.core.predicate="node∈Nodes" org.eventb.core.source="/ZRP1/m7.bum|org.eventb.core.machineFile#m7|org.eventb.core.event#'6|org.eventb.core.guard#-" org.eventb.core.theorem="false"/>
<org.eventb.core.scGuard name="(" org.eventb.core.label="grd2" org.eventb.core.predicate="request∈RouteRequest" org.eventb.core.source="/ZRP1/m7.bum|org.eventb.core.machineFile#m7|org.eventb.core.event#'6|org.eventb.core.guard#." org.eventb.core.theorem="false"/>
<org.eventb.core.scGuard name=")" org.eventb.core.label="grd3" org.eventb.core.predicate="source=(prj1 ⦂ ℙ(Nodes×Nodes×Nodes))(request)∧destination=(prj2 ⦂ ℙ(Nodes×Nodes×Nodes))(request)" org.eventb.core.source="/ZRP1/m7.bum|org.eventb.core.machineFile#m7|org.eventb.core.event#'6|org.eventb.core.guard#\/" org.eventb.core.theorem="false"/>
<org.eventb.core.scGuard name="*" org.eventb.core.label="grd4" org.eventb.core.predicate="request∈dom(AccumulatedPath(node))" org.eventb.core.source="/ZRP1/m7.bum|org.eventb.core.machineFile#m7|org.eventb.core.event#'6|org.eventb.core.guard#0" org.eventb.core.theorem="false"/>
<org.eventb.core.scGuard name="+" org.eventb.core.label="grd5" org.eventb.core.predicate="path=AccumulatedPath(node)(request)" org.eventb.core.source="/ZRP1/m7.bum|org.eventb.core.machineFile#m7|org.eventb.core.event#'6|org.eventb.core.guard#1" org.eventb.core.theorem="false"/>
<org.eventb.core.scGuard name="," org.eventb.core.label="grd6" org.eventb.core.predicate="source ↦ destination∈closure(path)" org.eventb.core.source="/ZRP1/m7.bum|org.eventb.core.machineFile#m7|org.eventb.core.event#'6|org.eventb.core.guard#2" org.eventb.core.theorem="false"/>
<org.eventb.core.scGuard name="-" org.eventb.core.label="grd7" org.eventb.core.predicate="zone={q⦂Nodes·node ↦ q∈closure(LinkStateTable(node))∨q=node ∣ q}" org.eventb.core.source="/ZRP1/m7.bum|org.eventb.core.machineFile#m7|org.eventb.core.event#'6|org.eventb.core.guard#3" org.eventb.core.theorem="false"/>
<org.eventb.core.scAction name="destinatioo" org.eventb.core.assignment="ZoneCoverage ≔ ZoneCoverage{node ↦ ZoneCoverage(node){request ↦ zone}}" org.eventb.core.label="act1" org.eventb.core.source="/ZRP1/m7.bum|org.eventb.core.machineFile#m7|org.eventb.core.event#'6|org.eventb.core.action#4"/>
<org.eventb.core.scParameter name="destination" org.eventb.core.source="/ZRP1/m7.bum|org.eventb.core.machineFile#m7|org.eventb.core.event#'6|org.eventb.core.parameter#*" org.eventb.core.type="Nodes"/>
<org.eventb.core.scParameter name="node" org.eventb.core.source="/ZRP1/m7.bum|org.eventb.core.machineFile#m7|org.eventb.core.event#'6|org.eventb.core.parameter#'" org.eventb.core.type="Nodes"/>
<org.eventb.core.scParameter name="path" org.eventb.core.source="/ZRP1/m7.bum|org.eventb.core.machineFile#m7|org.eventb.core.event#'6|org.eventb.core.parameter#+" org.eventb.core.type="ℙ(Nodes×Nodes)"/>
<org.eventb.core.scParameter name="request" org.eventb.core.source="/ZRP1/m7.bum|org.eventb.core.machineFile#m7|org.eventb.core.event#'6|org.eventb.core.parameter#(" org.eventb.core.type="Nodes×Nodes"/>
<org.eventb.core.scParameter name="source" org.eventb.core.source="/ZRP1/m7.bum|org.eventb.core.machineFile#m7|org.eventb.core.event#'6|org.eventb.core.parameter#)" org.eventb.core.type="Nodes"/>
<org.eventb.core.scParameter name="zone" org.eventb.core.source="/ZRP1/m7.bum|org.eventb.core.machineFile#m7|org.eventb.core.event#'6|org.eventb.core.parameter#," org.eventb.core.type="ℙ(Nodes)"/>
</org.eventb.core.scEvent>
<org.eventb.core.scEvent name="TransmittedReplyPat{" org.eventb.core.accurate="true" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.label="receiveRequest" org.eventb.core.source="/ZRP1/m8.bum|org.eventb.core.machineFile#m8|org.eventb.core.event#'F">
<org.eventb.core.scRefinesEvent name="'" org.eventb.core.scTarget="/ZRP1/m7.bcm|org.eventb.core.scMachineFile#m7|org.eventb.core.scEvent#TransmittedSeqNu~" org.eventb.core.source="/ZRP1/m8.bum|org.eventb.core.machineFile#m8|org.eventb.core.event#'F|org.eventb.core.refinesEvent#'"/>
<org.eventb.core.scGuard name="'" org.eventb.core.label="grd1" org.eventb.core.predicate="sender∈Nodes∧receiver∈Nodes∧sender≠receiver" org.eventb.core.source="/ZRP1/m5.bum|org.eventb.core.machineFile#m5|org.eventb.core.event#}|org.eventb.core.guard#*" org.eventb.core.theorem="false"/>
<org.eventb.core.scGuard name="(" org.eventb.core.label="grd2" org.eventb.core.predicate="request∈RouteRequest" org.eventb.core.source="/ZRP1/m5.bum|org.eventb.core.machineFile#m5|org.eventb.core.event#}|org.eventb.core.guard#+" org.eventb.core.theorem="false"/>
<org.eventb.core.scGuard name=")" org.eventb.core.label="grd3" org.eventb.core.predicate="TransmittedTag(sender ↦ receiver)(request)=1" org.eventb.core.source="/ZRP1/m5.bum|org.eventb.core.machineFile#m5|org.eventb.core.event#}|org.eventb.core.guard#," org.eventb.core.theorem="false"/>
<org.eventb.core.scGuard name="*" org.eventb.core.label="grd4" org.eventb.core.predicate="request∉dom(AccumulatedPath(receiver))" org.eventb.core.source="/ZRP1/m5.bum|org.eventb.core.machineFile#m5|org.eventb.core.event#}|org.eventb.core.guard#-" org.eventb.core.theorem="false"/>
<org.eventb.core.scGuard name="+" org.eventb.core.label="grd5" org.eventb.core.predicate="nodes∈ℙ(Nodes)" org.eventb.core.source="/ZRP1/m5.bum|org.eventb.core.machineFile#m5|org.eventb.core.event#}|org.eventb.core.guard#." org.eventb.core.theorem="false"/>
<org.eventb.core.scGuard name="," org.eventb.core.label="grd6" org.eventb.core.predicate="path∈Nodes ↔ Nodes∧sender ↦ receiver∈path" org.eventb.core.source="/ZRP1/m5.bum|org.eventb.core.machineFile#m5|org.eventb.core.event#}|org.eventb.core.guard#\/" org.eventb.core.theorem="false"/>
<org.eventb.core.scGuard name="-" org.eventb.core.label="grd7" org.eventb.core.predicate="∀n⦂Nodes·n∈dom(path)⇒¬n ↦ n∈closure(path)" org.eventb.core.source="/ZRP1/m5.bum|org.eventb.core.machineFile#m5|org.eventb.core.event#}|org.eventb.core.guard#0" org.eventb.core.theorem="false"/>
<org.eventb.core.scAction name="receives" org.eventb.core.assignment="AccumulatedPath ≔ AccumulatedPath{receiver ↦ AccumulatedPath(receiver){request ↦ path}}" org.eventb.core.label="act1" org.eventb.core.source="/ZRP1/m5.bum|org.eventb.core.machineFile#m5|org.eventb.core.event#}|org.eventb.core.action#1"/>
<org.eventb.core.scAction name="receivet" org.eventb.core.assignment="IntendedNeighbor ≔ IntendedNeighbor{receiver ↦ request ↦ nodes}" org.eventb.core.label="act2" org.eventb.core.source="/ZRP1/m5.bum|org.eventb.core.machineFile#m5|org.eventb.core.event#}|org.eventb.core.action#2"/>
<org.eventb.core.scAction name="receiveu" org.eventb.core.assignment="TransmittedTag ≔ TransmittedTag{sender ↦ receiver ↦ TransmittedTag(sender ↦ receiver){request ↦ 0}}" org.eventb.core.label="act3" org.eventb.core.source="/ZRP1/m5.bum|org.eventb.core.machineFile#m5|org.eventb.core.event#}|org.eventb.core.action#3"/>
<org.eventb.core.scAction name="receivev" org.eventb.core.assignment="TransmittedPath ≔ TransmittedPath{sender ↦ receiver ↦ TransmittedPath(sender ↦ receiver){request ↦ (∅ ⦂ ℙ(Nodes×Nodes))}}" org.eventb.core.label="act4" org.eventb.core.source="/ZRP1/m5.bum|org.eventb.core.machineFile#m5|org.eventb.core.event#}|org.eventb.core.action#4"/>
<org.eventb.core.scParameter name="nodes" org.eventb.core.source="/ZRP1/m5.bum|org.eventb.core.machineFile#m5|org.eventb.core.event#}|org.eventb.core.parameter#5" org.eventb.core.type="ℙ(Nodes)"/>
<org.eventb.core.scParameter name="path" org.eventb.core.source="/ZRP1/m5.bum|org.eventb.core.machineFile#m5|org.eventb.core.event#}|org.eventb.core.parameter#6" org.eventb.core.type="ℙ(Nodes×Nodes)"/>
<org.eventb.core.scParameter name="receiver" org.eventb.core.source="/ZRP1/m5.bum|org.eventb.core.machineFile#m5|org.eventb.core.event#}|org.eventb.core.parameter#(" org.eventb.core.type="Nodes"/>
<org.eventb.core.scParameter name="request" org.eventb.core.source="/ZRP1/m5.bum|org.eventb.core.machineFile#m5|org.eventb.core.event#}|org.eventb.core.parameter#)" org.eventb.core.type="Nodes×Nodes"/>
<org.eventb.core.scParameter name="sender" org.eventb.core.source="/ZRP1/m5.bum|org.eventb.core.machineFile#m5|org.eventb.core.event#}|org.eventb.core.parameter#'" org.eventb.core.type="Nodes"/>
</org.eventb.core.scEvent>
<org.eventb.core.scEvent name="TransmittedReplyPat|" org.eventb.core.accurate="true" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.label="receiveRequest_NoRoute" org.eventb.core.source="/ZRP1/m8.bum|org.eventb.core.machineFile#m8|org.eventb.core.event#'G">
<org.eventb.core.scRefinesEvent name="'" org.eventb.core.scTarget="/ZRP1/m7.bcm|org.eventb.core.scMachineFile#m7|org.eventb.core.scEvent#TransmittedSeqNv'" org.eventb.core.source="/ZRP1/m8.bum|org.eventb.core.machineFile#m8|org.eventb.core.event#'G|org.eventb.core.refinesEvent#'"/>
<org.eventb.core.scGuard name="(" org.eventb.core.label="grd1" org.eventb.core.predicate="sender∈Nodes∧receiver∈Nodes∧sender≠receiver" org.eventb.core.source="/ZRP1/m7.bum|org.eventb.core.machineFile#m7|org.eventb.core.event#'1|org.eventb.core.guard#*" org.eventb.core.theorem="false"/>
<org.eventb.core.scGuard name=")" org.eventb.core.label="grd2" org.eventb.core.predicate="request∈RouteRequest" org.eventb.core.source="/ZRP1/m7.bum|org.eventb.core.machineFile#m7|org.eventb.core.event#'1|org.eventb.core.guard#+" org.eventb.core.theorem="false"/>
<org.eventb.core.scGuard name="*" org.eventb.core.label="grd3" org.eventb.core.predicate="TransmittedTag(sender ↦ receiver)(request)=1" org.eventb.core.source="/ZRP1/m7.bum|org.eventb.core.machineFile#m7|org.eventb.core.event#'1|org.eventb.core.guard#," org.eventb.core.theorem="false"/>
<org.eventb.core.scGuard name="+" org.eventb.core.label="grd4" org.eventb.core.predicate="request∉dom(AccumulatedPath(receiver))" org.eventb.core.source="/ZRP1/m7.bum|org.eventb.core.machineFile#m7|org.eventb.core.event#'1|org.eventb.core.guard#-" org.eventb.core.theorem="false"/>
<org.eventb.core.scGuard name="," org.eventb.core.label="grd5" org.eventb.core.predicate="nodes∈ℙ(Nodes)" org.eventb.core.source="/ZRP1/m7.bum|org.eventb.core.machineFile#m7|org.eventb.core.event#'1|org.eventb.core.guard#." org.eventb.core.theorem="false"/>
<org.eventb.core.scGuard name="-" org.eventb.core.label="grd7" org.eventb.core.predicate="∀n⦂Nodes·n∈dom(path)⇒¬n ↦ n∈closure(path)" org.eventb.core.source="/ZRP1/m7.bum|org.eventb.core.machineFile#m7|org.eventb.core.event#'1|org.eventb.core.guard#0" org.eventb.core.theorem="false"/>
<org.eventb.core.scGuard name="." org.eventb.core.label="grd8" org.eventb.core.predicate="destination=(prj2 ⦂ ℙ(Nodes×Nodes×Nodes))(request)" org.eventb.core.source="/ZRP1/m7.bum|org.eventb.core.machineFile#m7|org.eventb.core.event#'1|org.eventb.core.guard#8" org.eventb.core.theorem="false"/>
<org.eventb.core.scGuard name="/" org.eventb.core.label="grd9" org.eventb.core.predicate="receiver ↦ destination∉closure(LinkStateTable(receiver))" org.eventb.core.source="/ZRP1/m7.bum|org.eventb.core.machineFile#m7|org.eventb.core.event#'1|org.eventb.core.guard#9" org.eventb.core.theorem="false"/>
<org.eventb.core.scGuard name="0" org.eventb.core.label="grd11" org.eventb.core.predicate="nodes≠(∅ ⦂ ℙ(Nodes))" org.eventb.core.source="/ZRP1/m7.bum|org.eventb.core.machineFile#m7|org.eventb.core.event#'1|org.eventb.core.guard#;" org.eventb.core.theorem="false"/>
<org.eventb.core.scGuard name="1" org.eventb.core.label="grd12" org.eventb.core.predicate="path=TransmittedPath(sender ↦ receiver)(request)∪{sender ↦ receiver}" org.eventb.core.source="/ZRP1/m7.bum|org.eventb.core.machineFile#m7|org.eventb.core.event#'1|org.eventb.core.guard#=" org.eventb.core.theorem="false"/>
<org.eventb.core.scGuard name="2" org.eventb.core.label="grd13" org.eventb.core.predicate="nodes={q⦂Nodes·receiver ↦ q∈LinkStateTable(receiver)∧(∃p⦂Nodes,c⦂ℙ(Nodes×Nodes)·c⊆LinkStateTable(receiver)∧q ↦ p∈closure(c)∧card(c)=zoneRadius − 1∧(∀s⦂ℙ(Nodes×Nodes)·s⊆LinkStateTable(receiver)∧q ↦ p∈closure(s)∧card(s)≥card(c))∧p∉ZoneCoverage(receiver)(request))∧q≠sender ∣ q}" org.eventb.core.source="/ZRP1/m7.bum|org.eventb.core.machineFile#m7|org.eventb.core.event#'1|org.eventb.core.guard#&gt;" org.eventb.core.theorem="false"/>
<org.eventb.core.scAction name="destinatioo" org.eventb.core.assignment="AccumulatedPath ≔ AccumulatedPath{receiver ↦ AccumulatedPath(receiver){request ↦ path}}" org.eventb.core.label="act1" org.eventb.core.source="/ZRP1/m7.bum|org.eventb.core.machineFile#m7|org.eventb.core.event#'1|org.eventb.core.action#1"/>
<org.eventb.core.scAction name="destinatiop" org.eventb.core.assignment="IntendedNeighbor ≔ IntendedNeighbor{receiver ↦ request ↦ nodes}" org.eventb.core.label="act2" org.eventb.core.source="/ZRP1/m7.bum|org.eventb.core.machineFile#m7|org.eventb.core.event#'1|org.eventb.core.action#2"/>
<org.eventb.core.scAction name="destinatioq" org.eventb.core.assignment="TransmittedTag ≔ TransmittedTag{sender ↦ receiver ↦ TransmittedTag(sender ↦ receiver){request ↦ 0}}" org.eventb.core.label="act3" org.eventb.core.source="/ZRP1/m7.bum|org.eventb.core.machineFile#m7|org.eventb.core.event#'1|org.eventb.core.action#3"/>
<org.eventb.core.scAction name="destinatior" org.eventb.core.assignment="TransmittedPath ≔ TransmittedPath{sender ↦ receiver ↦ TransmittedPath(sender ↦ receiver){request ↦ (∅ ⦂ ℙ(Nodes×Nodes))}}" org.eventb.core.label="act4" org.eventb.core.source="/ZRP1/m7.bum|org.eventb.core.machineFile#m7|org.eventb.core.event#'1|org.eventb.core.action#4"/>
<org.eventb.core.scParameter name="destination" org.eventb.core.source="/ZRP1/m7.bum|org.eventb.core.machineFile#m7|org.eventb.core.event#'1|org.eventb.core.parameter#7" org.eventb.core.type="Nodes"/>
<org.eventb.core.scParameter name="nodes" org.eventb.core.source="/ZRP1/m7.bum|org.eventb.core.machineFile#m7|org.eventb.core.event#'1|org.eventb.core.parameter#5" org.eventb.core.type="ℙ(Nodes)"/>
<org.eventb.core.scParameter name="path" org.eventb.core.source="/ZRP1/m7.bum|org.eventb.core.machineFile#m7|org.eventb.core.event#'1|org.eventb.core.parameter#6" org.eventb.core.type="ℙ(Nodes×Nodes)"/>
<org.eventb.core.scParameter name="receiver" org.eventb.core.source="/ZRP1/m7.bum|org.eventb.core.machineFile#m7|org.eventb.core.event#'1|org.eventb.core.parameter#(" org.eventb.core.type="Nodes"/>
<org.eventb.core.scParameter name="request" org.eventb.core.source="/ZRP1/m7.bum|org.eventb.core.machineFile#m7|org.eventb.core.event#'1|org.eventb.core.parameter#)" org.eventb.core.type="Nodes×Nodes"/>
<org.eventb.core.scParameter name="sender" org.eventb.core.source="/ZRP1/m7.bum|org.eventb.core.machineFile#m7|org.eventb.core.event#'1|org.eventb.core.parameter#'" org.eventb.core.type="Nodes"/>
</org.eventb.core.scEvent>
<org.eventb.core.scEvent name="TransmittedReplyPat}" org.eventb.core.accurate="true" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.label="receiveRequest_HasRoute" org.eventb.core.source="/ZRP1/m8.bum|org.eventb.core.machineFile#m8|org.eventb.core.event#'H">
<org.eventb.core.scRefinesEvent name="'" org.eventb.core.scTarget="/ZRP1/m7.bcm|org.eventb.core.scMachineFile#m7|org.eventb.core.scEvent#TransmittedSeqNv(" org.eventb.core.source="/ZRP1/m8.bum|org.eventb.core.machineFile#m8|org.eventb.core.event#'H|org.eventb.core.refinesEvent#'"/>
<org.eventb.core.scGuard name="(" org.eventb.core.label="grd1" org.eventb.core.predicate="sender∈Nodes∧receiver∈Nodes∧sender≠receiver" org.eventb.core.source="/ZRP1/m6.bum|org.eventb.core.machineFile#m6|org.eventb.core.event#'2|org.eventb.core.guard#*" org.eventb.core.theorem="false"/>
<org.eventb.core.scGuard name=")" org.eventb.core.label="grd2" org.eventb.core.predicate="request∈RouteRequest" org.eventb.core.source="/ZRP1/m6.bum|org.eventb.core.machineFile#m6|org.eventb.core.event#'2|org.eventb.core.guard#+" org.eventb.core.theorem="false"/>
<org.eventb.core.scGuard name="*" org.eventb.core.label="grd3" org.eventb.core.predicate="TransmittedTag(sender ↦ receiver)(request)=1" org.eventb.core.source="/ZRP1/m6.bum|org.eventb.core.machineFile#m6|org.eventb.core.event#'2|org.eventb.core.guard#," org.eventb.core.theorem="false"/>
<org.eventb.core.scGuard name="+" org.eventb.core.label="grd4" org.eventb.core.predicate="request∉dom(AccumulatedPath(receiver))" org.eventb.core.source="/ZRP1/m6.bum|org.eventb.core.machineFile#m6|org.eventb.core.event#'2|org.eventb.core.guard#-" org.eventb.core.theorem="false"/>
<org.eventb.core.scGuard name="," org.eventb.core.label="grd5" org.eventb.core.predicate="nodes∈ℙ(Nodes)" org.eventb.core.source="/ZRP1/m6.bum|org.eventb.core.machineFile#m6|org.eventb.core.event#'2|org.eventb.core.guard#." org.eventb.core.theorem="false"/>
<org.eventb.core.scGuard name="-" org.eventb.core.label="grd7" org.eventb.core.predicate="∀n⦂Nodes·n∈dom(path)⇒¬n ↦ n∈closure(path)" org.eventb.core.source="/ZRP1/m6.bum|org.eventb.core.machineFile#m6|org.eventb.core.event#'2|org.eventb.core.guard#0" org.eventb.core.theorem="false"/>
<org.eventb.core.scGuard name="." org.eventb.core.label="grd8" org.eventb.core.predicate="nodes=(∅ ⦂ ℙ(Nodes))" org.eventb.core.source="/ZRP1/m6.bum|org.eventb.core.machineFile#m6|org.eventb.core.event#'2|org.eventb.core.guard#:" org.eventb.core.theorem="false"/>
<org.eventb.core.scGuard name="/" org.eventb.core.label="grd9" org.eventb.core.predicate="destination=(prj2 ⦂ ℙ(Nodes×Nodes×Nodes))(request)" org.eventb.core.source="/ZRP1/m6.bum|org.eventb.core.machineFile#m6|org.eventb.core.event#'2|org.eventb.core.guard#;" org.eventb.core.theorem="false"/>
<org.eventb.core.scGuard name="0" org.eventb.core.label="grd10" org.eventb.core.predicate="receiver ↦ destination∈closure(LinkStateTable(receiver))" org.eventb.core.source="/ZRP1/m6.bum|org.eventb.core.machineFile#m6|org.eventb.core.event#'2|org.eventb.core.guard#=" org.eventb.core.theorem="false"/>
<org.eventb.core.scGuard name="1" org.eventb.core.label="grd11" org.eventb.core.predicate="collection={S⦂ℙ(Nodes×Nodes)·S⊆LinkStateTable(receiver)∧card(S)≤zoneRadius∧receiver ↦ destination∈closure(S) ∣ S}" org.eventb.core.source="/ZRP1/m6.bum|org.eventb.core.machineFile#m6|org.eventb.core.event#'2|org.eventb.core.guard#&gt;" org.eventb.core.theorem="false"/>
<org.eventb.core.scGuard name="2" org.eventb.core.label="grd12" org.eventb.core.predicate="routes=union({R⦂ℙ(Nodes×Nodes)·∀S⦂ℙ(Nodes×Nodes)·S∈collection∧R∈collection∧card(R)≤card(S) ∣ R})" org.eventb.core.source="/ZRP1/m6.bum|org.eventb.core.machineFile#m6|org.eventb.core.event#'2|org.eventb.core.guard#?" org.eventb.core.theorem="false"/>
<org.eventb.core.scGuard name="3" org.eventb.core.label="grd13" org.eventb.core.predicate="path=TransmittedPath(sender ↦ receiver)(request)∪{sender ↦ receiver}∪routes" org.eventb.core.source="/ZRP1/m6.bum|org.eventb.core.machineFile#m6|org.eventb.core.event#'2|org.eventb.core.guard#@" org.eventb.core.theorem="false"/>
<org.eventb.core.scAction name="destinatioo" org.eventb.core.assignment="AccumulatedPath ≔ AccumulatedPath{receiver ↦ AccumulatedPath(receiver){request ↦ path}}" org.eventb.core.label="act1" org.eventb.core.source="/ZRP1/m6.bum|org.eventb.core.machineFile#m6|org.eventb.core.event#'2|org.eventb.core.action#1"/>
<org.eventb.core.scAction name="destinatiop" org.eventb.core.assignment="IntendedNeighbor ≔ IntendedNeighbor{receiver ↦ request ↦ nodes}" org.eventb.core.label="act2" org.eventb.core.source="/ZRP1/m6.bum|org.eventb.core.machineFile#m6|org.eventb.core.event#'2|org.eventb.core.action#2"/>
<org.eventb.core.scAction name="destinatioq" org.eventb.core.assignment="TransmittedTag ≔ TransmittedTag{sender ↦ receiver ↦ TransmittedTag(sender ↦ receiver){request ↦ 0}}" org.eventb.core.label="act3" org.eventb.core.source="/ZRP1/m6.bum|org.eventb.core.machineFile#m6|org.eventb.core.event#'2|org.eventb.core.action#3"/>
<org.eventb.core.scAction name="destinatior" org.eventb.core.assignment="TransmittedPath ≔ TransmittedPath{sender ↦ receiver ↦ TransmittedPath(sender ↦ receiver){request ↦ (∅ ⦂ ℙ(Nodes×Nodes))}}" org.eventb.core.label="act4" org.eventb.core.source="/ZRP1/m6.bum|org.eventb.core.machineFile#m6|org.eventb.core.event#'2|org.eventb.core.action#4"/>
<org.eventb.core.scParameter name="collection" org.eventb.core.source="/ZRP1/m6.bum|org.eventb.core.machineFile#m6|org.eventb.core.event#'2|org.eventb.core.parameter#8" org.eventb.core.type="ℙ(ℙ(Nodes×Nodes))"/>
<org.eventb.core.scParameter name="destination" org.eventb.core.source="/ZRP1/m6.bum|org.eventb.core.machineFile#m6|org.eventb.core.event#'2|org.eventb.core.parameter#7" org.eventb.core.type="Nodes"/>
<org.eventb.core.scParameter name="nodes" org.eventb.core.source="/ZRP1/m6.bum|org.eventb.core.machineFile#m6|org.eventb.core.event#'2|org.eventb.core.parameter#5" org.eventb.core.type="ℙ(Nodes)"/>
<org.eventb.core.scParameter name="path" org.eventb.core.source="/ZRP1/m6.bum|org.eventb.core.machineFile#m6|org.eventb.core.event#'2|org.eventb.core.parameter#6" org.eventb.core.type="ℙ(Nodes×Nodes)"/>
<org.eventb.core.scParameter name="receiver" org.eventb.core.source="/ZRP1/m6.bum|org.eventb.core.machineFile#m6|org.eventb.core.event#'2|org.eventb.core.parameter#(" org.eventb.core.type="Nodes"/>
<org.eventb.core.scParameter name="request" org.eventb.core.source="/ZRP1/m6.bum|org.eventb.core.machineFile#m6|org.eventb.core.event#'2|org.eventb.core.parameter#)" org.eventb.core.type="Nodes×Nodes"/>
<org.eventb.core.scParameter name="routes" org.eventb.core.source="/ZRP1/m6.bum|org.eventb.core.machineFile#m6|org.eventb.core.event#'2|org.eventb.core.parameter#9" org.eventb.core.type="ℙ(Nodes×Nodes)"/>
<org.eventb.core.scParameter name="sender" org.eventb.core.source="/ZRP1/m6.bum|org.eventb.core.machineFile#m6|org.eventb.core.event#'2|org.eventb.core.parameter#'" org.eventb.core.type="Nodes"/>
</org.eventb.core.scEvent>
</org.eventb.core.scMachineFile>
